[
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "QLocale",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QObject",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QObject",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QRect",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QUrl",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QSize",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QUrl",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QEvent",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QRectF",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QEasingCurve",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QUrl",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QPoint",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QEasingCurve",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QEasingCurve",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QUrl",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QStandardPaths",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QUrl",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QEvent",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QObject",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QRect",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QThread",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "pyqtSignal",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QUrl",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QStandardPaths",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "qconfig",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "QConfig",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ConfigItem",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "OptionsConfigItem",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "BoolValidator",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "OptionsValidator",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "RangeConfigItem",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "RangeValidator",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FolderListValidator",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "EnumSerializer",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FolderValidator",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ConfigSerializer",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "__version__",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FluentIconBase",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "getIconColor",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "StyleSheetBase",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "isDarkTheme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "qconfig",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "NavigationWidget",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "isDarkTheme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "IconWidget",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FluentIcon",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "TextWrap",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SingleDirectionScrollArea",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "IconWidget",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "TextWrap",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FlowLayout",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "Action",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "DropDownPushButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "DropDownToolButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PushButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ToolButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PrimaryPushButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "HyperlinkButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ComboBox",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "RadioButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "CheckBox",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "Slider",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SwitchButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "EditableComboBox",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ToggleButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "RoundMenu",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FluentIcon",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SplitPushButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SplitToolButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PrimarySplitToolButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PrimarySplitPushButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PrimaryDropDownPushButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PrimaryToolButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PrimaryDropDownToolButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "DatePicker",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "TimePicker",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "AMTimePicker",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ZhDatePicker",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PushButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "Dialog",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "MessageBox",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ColorDialog",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ScrollArea",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PushButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ToolButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FluentIcon",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "isDarkTheme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "IconWidget",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ToolTipFilter",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ScrollArea",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "isDarkTheme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FluentIcon",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FluentIcon",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "IconWidget",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FlowLayout",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "isDarkTheme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "applyThemeColor",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SmoothScrollArea",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SearchLineEdit",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FlowLayout",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PushButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "NavigationInterface",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "NavigationItemPosition",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "MessageBox",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "isDarkTheme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PopUpAniStackedWidget",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "qrouter",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FluentIcon",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FluentIcon",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "RoundMenu",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PushButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "Action",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FluentIcon",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "Pivot",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "qrouter",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SingleDirectionScrollArea",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SmoothScrollArea",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ToolTipFilter",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PixmapLabel",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ScrollArea",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SettingCardGroup",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SwitchSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FolderListSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "OptionsSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PushSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "HyperlinkCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PrimaryPushSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ScrollArea",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ComboBoxSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ExpandLayout",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "CustomColorSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "setTheme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "setThemeColor",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "RangeSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "isDarkTheme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FluentIcon",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "InfoBar",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ScrollArea",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PushButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ToolButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FluentIcon",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "isDarkTheme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "IconWidget",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ToolTipFilter",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "StateToolTip",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ToolTipFilter",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PushButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PixmapLabel",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "InfoBar",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "InfoBarIcon",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FluentIcon",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "InfoBarPosition",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ProgressBar",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "IndeterminateProgressBar",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SpinBox",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ProgressRing",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "LineEdit",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SpinBox",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "DoubleSpinBox",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "TimeEdit",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "DateTimeEdit",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "DateEdit",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "TextEdit",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "TreeWidget",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "TableWidget",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ListWidget",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "NavigationInterface",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "NavigationItemPosition",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "NavigationWidget",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "MessageBox",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "isDarkTheme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "setTheme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "setThemeColor",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "qrouter",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FluentIcon",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SwitchButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "LineEdit",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SpinBox",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "DoubleSpinBox",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "TimeEdit",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "DateTimeEdit",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "DateEdit",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "TextEdit",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ToggleButton",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "StateToolTip",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SettingCardGroup",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "SwitchSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FolderListSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "OptionsSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PushSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "HyperlinkCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PrimaryPushSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ScrollArea",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ComboBoxSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "ExpandLayout",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "Theme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "CustomColorSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "setTheme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "setThemeColor",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "RangeSettingCard",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "isDarkTheme",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "FluentIcon",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "InfoBar",
        "importPath": "qfluentwidgets",
        "description": "qfluentwidgets",
        "isExtraImport": true,
        "detail": "qfluentwidgets",
        "documentation": {}
    },
    {
        "label": "PyQt5",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "PyQt5",
        "description": "PyQt5",
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PyQt5",
        "description": "PyQt5",
        "isExtraImport": true,
        "detail": "PyQt5",
        "documentation": {}
    },
    {
        "label": "Queue",
        "importPath": "queue",
        "description": "queue",
        "isExtraImport": true,
        "detail": "queue",
        "documentation": {}
    },
    {
        "label": "QPainter",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QImage",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QBrush",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QColor",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QFont",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QDesktopServices",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QDesktopServices",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QPainter",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QPen",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QColor",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QPainter",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QColor",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QBrush",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QPainterPath",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QIcon",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QDesktopServices",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QColor",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QDesktopServices",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QDesktopServices",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QPainter",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QPen",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QColor",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QColor",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QIcon",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QIcon",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QPainter",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QImage",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QBrush",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QColor",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QFont",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QPainter",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QDesktopServices",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QAction",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QButtonGroup",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QAction",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QStackedWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFileDialog",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QListWidgetItem",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QTreeWidgetItem",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QTreeWidgetItemIterator",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QTableWidgetItem",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QStackedWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFrame",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFileDialog",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QtCore",
        "importPath": "PySide2",
        "description": "PySide2",
        "isExtraImport": true,
        "detail": "PySide2",
        "documentation": {}
    },
    {
        "label": "typing",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "typing",
        "description": "typing",
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "FramelessWindow",
        "importPath": "qframelesswindow",
        "description": "qframelesswindow",
        "isExtraImport": true,
        "detail": "qframelesswindow",
        "documentation": {}
    },
    {
        "label": "TitleBar",
        "importPath": "qframelesswindow",
        "description": "qframelesswindow",
        "isExtraImport": true,
        "detail": "qframelesswindow",
        "documentation": {}
    },
    {
        "label": "FramelessWindow",
        "importPath": "qframelesswindow",
        "description": "qframelesswindow",
        "isExtraImport": true,
        "detail": "qframelesswindow",
        "documentation": {}
    },
    {
        "label": "StandardTitleBar",
        "importPath": "qframelesswindow",
        "description": "qframelesswindow",
        "isExtraImport": true,
        "detail": "qframelesswindow",
        "documentation": {}
    },
    {
        "label": "AcrylicLabel",
        "importPath": "qfluentwidgets.components.widgets.acrylic_label",
        "description": "qfluentwidgets.components.widgets.acrylic_label",
        "isExtraImport": true,
        "detail": "qfluentwidgets.components.widgets.acrylic_label",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "CnOcr",
        "importPath": "cnocr",
        "description": "cnocr",
        "isExtraImport": true,
        "detail": "cnocr",
        "documentation": {}
    },
    {
        "label": "CnOcr",
        "importPath": "cnocr",
        "description": "cnocr",
        "isExtraImport": true,
        "detail": "cnocr",
        "documentation": {}
    },
    {
        "label": "CnOcr",
        "importPath": "cnocr",
        "description": "cnocr",
        "isExtraImport": true,
        "detail": "cnocr",
        "documentation": {}
    },
    {
        "label": "CnOcr",
        "importPath": "cnocr",
        "description": "cnocr",
        "isExtraImport": true,
        "detail": "cnocr",
        "documentation": {}
    },
    {
        "label": "CnOcr",
        "importPath": "cnocr",
        "description": "cnocr",
        "isExtraImport": true,
        "detail": "cnocr",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "config",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "config",
        "description": "config",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "PaddleOCR",
        "importPath": "paddleocr",
        "description": "paddleocr",
        "isExtraImport": true,
        "detail": "paddleocr",
        "documentation": {}
    },
    {
        "label": "draw_ocr",
        "importPath": "paddleocr",
        "description": "paddleocr",
        "isExtraImport": true,
        "detail": "paddleocr",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "cv2",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cv2",
        "description": "cv2",
        "detail": "cv2",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "widgets",
        "importPath": "qfluentwidgets.components",
        "description": "qfluentwidgets.components",
        "isExtraImport": true,
        "detail": "qfluentwidgets.components",
        "documentation": {}
    },
    {
        "label": "PixmapLabel",
        "importPath": "qfluentwidgets.components.widgets.label",
        "description": "qfluentwidgets.components.widgets.label",
        "isExtraImport": true,
        "detail": "qfluentwidgets.components.widgets.label",
        "documentation": {}
    },
    {
        "label": "TextEdit",
        "importPath": "qfluentwidgets.components.widgets.line_edit",
        "description": "qfluentwidgets.components.widgets.line_edit",
        "isExtraImport": true,
        "detail": "qfluentwidgets.components.widgets.line_edit",
        "documentation": {}
    },
    {
        "label": "SimpleInterface",
        "importPath": "app.view.simple_interface",
        "description": "app.view.simple_interface",
        "isExtraImport": true,
        "detail": "app.view.simple_interface",
        "documentation": {}
    },
    {
        "label": "SimpleCard",
        "importPath": "app.view.simple_interface",
        "description": "app.view.simple_interface",
        "isExtraImport": true,
        "detail": "app.view.simple_interface",
        "documentation": {}
    },
    {
        "label": "usb2md_copy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "usb2md_copy",
        "description": "usb2md_copy",
        "detail": "usb2md_copy",
        "documentation": {}
    },
    {
        "label": "shutil",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shutil",
        "description": "shutil",
        "detail": "shutil",
        "documentation": {}
    },
    {
        "label": "Language",
        "kind": 6,
        "importPath": "app.common.config",
        "description": "app.common.config",
        "peekOfCode": "class Language(Enum):\n    \"\"\" Language enumeration \"\"\"\n    CHINESE_SIMPLIFIED = QLocale(QLocale.Chinese, QLocale.China)\n    CHINESE_TRADITIONAL = QLocale(QLocale.Chinese, QLocale.HongKong)\n    ENGLISH = QLocale(QLocale.English)\n    AUTO = QLocale()\nclass LanguageSerializer(ConfigSerializer):\n    \"\"\" Language serializer \"\"\"\n    def serialize(self, language):\n        return language.value.name() if language != Language.AUTO else \"Auto\"",
        "detail": "app.common.config",
        "documentation": {}
    },
    {
        "label": "LanguageSerializer",
        "kind": 6,
        "importPath": "app.common.config",
        "description": "app.common.config",
        "peekOfCode": "class LanguageSerializer(ConfigSerializer):\n    \"\"\" Language serializer \"\"\"\n    def serialize(self, language):\n        return language.value.name() if language != Language.AUTO else \"Auto\"\n    def deserialize(self, value: str):\n        return Language(QLocale(value)) if value != \"Auto\" else Language.AUTO\nclass Config(QConfig):\n    \"\"\" Config of application \"\"\"\n    # folders\n    musicFolders = ConfigItem(",
        "detail": "app.common.config",
        "documentation": {}
    },
    {
        "label": "Config",
        "kind": 6,
        "importPath": "app.common.config",
        "description": "app.common.config",
        "peekOfCode": "class Config(QConfig):\n    \"\"\" Config of application \"\"\"\n    # folders\n    musicFolders = ConfigItem(\n        \"Folders\", \"LocalMusic\", [], FolderListValidator())\n    downloadFolder = ConfigItem(\n        \"Folders\", \"Download\", \"app/download\", FolderValidator())\n    # main window\n    dpiScale = OptionsConfigItem(\n        \"MainWindow\", \"DpiScale\", \"Auto\", OptionsValidator([1, 1.25, 1.5, 1.75, 2, \"Auto\"]), restart=True)",
        "detail": "app.common.config",
        "documentation": {}
    },
    {
        "label": "YEAR",
        "kind": 5,
        "importPath": "app.common.config",
        "description": "app.common.config",
        "peekOfCode": "YEAR = 2023\nAUTHOR = \"zhiyiYo\"\nVERSION = __version__\nHELP_URL = \"https://pyqt-fluent-widgets.readthedocs.io/zh_CN/latest\"\nREPO_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets\"\nEXAMPLE_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/master/examples\"\nFEEDBACK_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/issues\"\nRELEASE_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/releases/latest\"\nSUPPORT_URL = \"https://afdian.net/a/zhiyiYo\"\ncfg = Config()",
        "detail": "app.common.config",
        "documentation": {}
    },
    {
        "label": "AUTHOR",
        "kind": 5,
        "importPath": "app.common.config",
        "description": "app.common.config",
        "peekOfCode": "AUTHOR = \"zhiyiYo\"\nVERSION = __version__\nHELP_URL = \"https://pyqt-fluent-widgets.readthedocs.io/zh_CN/latest\"\nREPO_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets\"\nEXAMPLE_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/master/examples\"\nFEEDBACK_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/issues\"\nRELEASE_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/releases/latest\"\nSUPPORT_URL = \"https://afdian.net/a/zhiyiYo\"\ncfg = Config()\nqconfig.load('app/config/config.json', cfg)",
        "detail": "app.common.config",
        "documentation": {}
    },
    {
        "label": "VERSION",
        "kind": 5,
        "importPath": "app.common.config",
        "description": "app.common.config",
        "peekOfCode": "VERSION = __version__\nHELP_URL = \"https://pyqt-fluent-widgets.readthedocs.io/zh_CN/latest\"\nREPO_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets\"\nEXAMPLE_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/master/examples\"\nFEEDBACK_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/issues\"\nRELEASE_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/releases/latest\"\nSUPPORT_URL = \"https://afdian.net/a/zhiyiYo\"\ncfg = Config()\nqconfig.load('app/config/config.json', cfg)",
        "detail": "app.common.config",
        "documentation": {}
    },
    {
        "label": "HELP_URL",
        "kind": 5,
        "importPath": "app.common.config",
        "description": "app.common.config",
        "peekOfCode": "HELP_URL = \"https://pyqt-fluent-widgets.readthedocs.io/zh_CN/latest\"\nREPO_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets\"\nEXAMPLE_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/master/examples\"\nFEEDBACK_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/issues\"\nRELEASE_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/releases/latest\"\nSUPPORT_URL = \"https://afdian.net/a/zhiyiYo\"\ncfg = Config()\nqconfig.load('app/config/config.json', cfg)",
        "detail": "app.common.config",
        "documentation": {}
    },
    {
        "label": "REPO_URL",
        "kind": 5,
        "importPath": "app.common.config",
        "description": "app.common.config",
        "peekOfCode": "REPO_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets\"\nEXAMPLE_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/master/examples\"\nFEEDBACK_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/issues\"\nRELEASE_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/releases/latest\"\nSUPPORT_URL = \"https://afdian.net/a/zhiyiYo\"\ncfg = Config()\nqconfig.load('app/config/config.json', cfg)",
        "detail": "app.common.config",
        "documentation": {}
    },
    {
        "label": "EXAMPLE_URL",
        "kind": 5,
        "importPath": "app.common.config",
        "description": "app.common.config",
        "peekOfCode": "EXAMPLE_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/master/examples\"\nFEEDBACK_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/issues\"\nRELEASE_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/releases/latest\"\nSUPPORT_URL = \"https://afdian.net/a/zhiyiYo\"\ncfg = Config()\nqconfig.load('app/config/config.json', cfg)",
        "detail": "app.common.config",
        "documentation": {}
    },
    {
        "label": "FEEDBACK_URL",
        "kind": 5,
        "importPath": "app.common.config",
        "description": "app.common.config",
        "peekOfCode": "FEEDBACK_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/issues\"\nRELEASE_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/releases/latest\"\nSUPPORT_URL = \"https://afdian.net/a/zhiyiYo\"\ncfg = Config()\nqconfig.load('app/config/config.json', cfg)",
        "detail": "app.common.config",
        "documentation": {}
    },
    {
        "label": "RELEASE_URL",
        "kind": 5,
        "importPath": "app.common.config",
        "description": "app.common.config",
        "peekOfCode": "RELEASE_URL = \"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/releases/latest\"\nSUPPORT_URL = \"https://afdian.net/a/zhiyiYo\"\ncfg = Config()\nqconfig.load('app/config/config.json', cfg)",
        "detail": "app.common.config",
        "documentation": {}
    },
    {
        "label": "SUPPORT_URL",
        "kind": 5,
        "importPath": "app.common.config",
        "description": "app.common.config",
        "peekOfCode": "SUPPORT_URL = \"https://afdian.net/a/zhiyiYo\"\ncfg = Config()\nqconfig.load('app/config/config.json', cfg)",
        "detail": "app.common.config",
        "documentation": {}
    },
    {
        "label": "cfg",
        "kind": 5,
        "importPath": "app.common.config",
        "description": "app.common.config",
        "peekOfCode": "cfg = Config()\nqconfig.load('app/config/config.json', cfg)",
        "detail": "app.common.config",
        "documentation": {}
    },
    {
        "label": "Icon",
        "kind": 6,
        "importPath": "app.common.icon",
        "description": "app.common.icon",
        "peekOfCode": "class Icon(FluentIconBase, Enum):\n    GRID = \"Grid\"\n    MENU = \"Menu\"\n    TEXT = \"Text\"\n    EMOJI_TAB_SYMBOLS = \"EmojiTabSymbols\"\n    def path(self, theme=Theme.AUTO):\n        return f\":/gallery/images/icons/{self.value}_{getIconColor(theme)}.svg\"",
        "detail": "app.common.icon",
        "documentation": {}
    },
    {
        "label": "qInitResources",
        "kind": 2,
        "importPath": "app.common.resource",
        "description": "app.common.resource",
        "peekOfCode": "def qInitResources():\n    QtCore.qRegisterResourceData(rcc_version, qt_resource_struct, qt_resource_name, qt_resource_data)\ndef qCleanupResources():\n    QtCore.qUnregisterResourceData(rcc_version, qt_resource_struct, qt_resource_name, qt_resource_data)\nqInitResources()",
        "detail": "app.common.resource",
        "documentation": {}
    },
    {
        "label": "qCleanupResources",
        "kind": 2,
        "importPath": "app.common.resource",
        "description": "app.common.resource",
        "peekOfCode": "def qCleanupResources():\n    QtCore.qUnregisterResourceData(rcc_version, qt_resource_struct, qt_resource_name, qt_resource_data)\nqInitResources()",
        "detail": "app.common.resource",
        "documentation": {}
    },
    {
        "label": "qt_resource_data",
        "kind": 5,
        "importPath": "app.common.resource",
        "description": "app.common.resource",
        "peekOfCode": "qt_resource_data = b\"\\\n\\x00\\x00\\x50\\x04\\\n\\x3c\\\n\\xb8\\x64\\x18\\xca\\xef\\x9c\\x95\\xcd\\x21\\x1c\\xbf\\x60\\xa1\\xbd\\xdd\\xa7\\\n\\x00\\x00\\x00\\x05\\x7a\\x68\\x5f\\x43\\x4e\\x42\\x00\\x00\\x08\\x30\\x00\\x00\\\n\\x05\\x5e\\x00\\x00\\x09\\x90\\x00\\x00\\x4a\\xc4\\x00\\x00\\x1f\\x25\\x00\\x00\\\n\\x55\\xc6\\x00\\x00\\x09\\x63\\x00\\x00\\x58\\x80\\x00\\x00\\x09\\xbc\\x00\\x00\\\n\\x5b\\x60\\x00\\x00\\x3b\\xe8\\x00\\x00\\xd9\\x58\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\xe9\\x58\\x00\\x00\\x00\\x44\\x00\\x04\\xa6\\x79\\x00\\x00\\x1e\\xfb\\x00\\x04\\\n\\xa8\\x8b\\x00\\x00\\x27\\x60\\x00\\x04\\xec\\x30\\x00\\x00\\x1f\\x7c\\x00\\x04\\",
        "detail": "app.common.resource",
        "documentation": {}
    },
    {
        "label": "qt_resource_name",
        "kind": 5,
        "importPath": "app.common.resource",
        "description": "app.common.resource",
        "peekOfCode": "qt_resource_name = b\"\\\n\\x00\\x07\\\n\\x0d\\x83\\x2c\\x59\\\n\\x00\\x67\\\n\\x00\\x61\\x00\\x6c\\x00\\x6c\\x00\\x65\\x00\\x72\\x00\\x79\\\n\\x00\\x03\\\n\\x00\\x00\\x78\\xa3\\\n\\x00\\x71\\\n\\x00\\x73\\x00\\x73\\\n\\x00\\x06\\",
        "detail": "app.common.resource",
        "documentation": {}
    },
    {
        "label": "qt_resource_struct_v1",
        "kind": 5,
        "importPath": "app.common.resource",
        "description": "app.common.resource",
        "peekOfCode": "qt_resource_struct_v1 = b\"\\\n\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\\n\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x02\\\n\\x00\\x00\\x00\\x14\\x00\\x02\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x7c\\\n\\x00\\x00\\x00\\x32\\x00\\x02\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x7a\\\n\\x00\\x00\\x00\\x20\\x00\\x02\\x00\\x00\\x00\\x0b\\x00\\x00\\x00\\x05\\\n\\x00\\x00\\x01\\x9e\\x00\\x02\\x00\\x00\\x00\\x08\\x00\\x00\\x00\\x72\\\n\\x00\\x00\\x00\\xda\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x12\\x1c\\x9b\\\n\\x00\\x00\\x00\\xaa\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x05\\xb7\\xe5\\\n\\x00\\x00\\x01\\x66\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x27\\x3a\\xd4\\",
        "detail": "app.common.resource",
        "documentation": {}
    },
    {
        "label": "qt_resource_struct_v2",
        "kind": 5,
        "importPath": "app.common.resource",
        "description": "app.common.resource",
        "peekOfCode": "qt_resource_struct_v2 = b\"\\\n\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x02\\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x00\\x14\\x00\\x02\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x7c\\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x00\\x32\\x00\\x02\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x7a\\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x00\\x20\\x00\\x02\\x00\\x00\\x00\\x0b\\x00\\x00\\x00\\x05\\",
        "detail": "app.common.resource",
        "documentation": {}
    },
    {
        "label": "qt_version",
        "kind": 5,
        "importPath": "app.common.resource",
        "description": "app.common.resource",
        "peekOfCode": "qt_version = [int(v) for v in QtCore.qVersion().split('.')]\nif qt_version < [5, 8, 0]:\n    rcc_version = 1\n    qt_resource_struct = qt_resource_struct_v1\nelse:\n    rcc_version = 2\n    qt_resource_struct = qt_resource_struct_v2\ndef qInitResources():\n    QtCore.qRegisterResourceData(rcc_version, qt_resource_struct, qt_resource_name, qt_resource_data)\ndef qCleanupResources():",
        "detail": "app.common.resource",
        "documentation": {}
    },
    {
        "label": "SignalBus",
        "kind": 6,
        "importPath": "app.common.signal_bus",
        "description": "app.common.signal_bus",
        "peekOfCode": "class SignalBus(QObject):\n    \"\"\" Signal bus \"\"\"\n    switchToSampleCard = pyqtSignal(str, int)\n    supportSignal = pyqtSignal()\nsignalBus = SignalBus()",
        "detail": "app.common.signal_bus",
        "documentation": {}
    },
    {
        "label": "signalBus",
        "kind": 5,
        "importPath": "app.common.signal_bus",
        "description": "app.common.signal_bus",
        "peekOfCode": "signalBus = SignalBus()",
        "detail": "app.common.signal_bus",
        "documentation": {}
    },
    {
        "label": "StyleSheet",
        "kind": 6,
        "importPath": "app.common.style_sheet",
        "description": "app.common.style_sheet",
        "peekOfCode": "class StyleSheet(StyleSheetBase, Enum):\n    \"\"\" Style sheet  \"\"\"\n    LINK_CARD = \"link_card\"\n    MAIN_WINDOW = \"main_window\"\n    SAMPLE_CARD = \"sample_card\"\n    HOME_INTERFACE = \"home_interface\"\n    ICON_INTERFACE = \"icon_interface\"\n    VIEW_INTERFACE = \"view_interface\"\n    SETTING_INTERFACE = \"setting_interface\"\n    GALLERY_INTERFACE = \"gallery_interface\"",
        "detail": "app.common.style_sheet",
        "documentation": {}
    },
    {
        "label": "Translator",
        "kind": 6,
        "importPath": "app.common.translator",
        "description": "app.common.translator",
        "peekOfCode": "class Translator(QObject):\n    def __init__(self, parent=None):\n        super().__init__(parent=parent)\n        self.text = self.tr('Text')\n        self.view = self.tr('View')\n        self.menus = self.tr('Menus')\n        self.icons = self.tr('Icons')\n        self.layout = self.tr('Layout')\n        self.dialogs = self.tr('Dialogs')\n        self.scroll = self.tr('Scrolling')",
        "detail": "app.common.translator",
        "documentation": {}
    },
    {
        "label": "Trie",
        "kind": 6,
        "importPath": "app.common.trie",
        "description": "app.common.trie",
        "peekOfCode": "class Trie:\n    \"\"\" String trie \"\"\"\n    def __init__(self):\n        self.key = ''\n        self.value = None\n        self.children = [None] * 26\n        self.isEnd = False\n    def insert(self, key: str, value):\n        \"\"\" insert item \"\"\"\n        key = key.lower()",
        "detail": "app.common.trie",
        "documentation": {}
    },
    {
        "label": "AvatarWidget",
        "kind": 6,
        "importPath": "app.components.avatar_widget",
        "description": "app.components.avatar_widget",
        "peekOfCode": "class AvatarWidget(NavigationWidget):\n    \"\"\" Avatar widget \"\"\"\n    def __init__(self, image_path, parent=None):\n        super().__init__(isSelectable=False, parent=parent)\n        self.avatar = QImage(image_path).scaled(\n            24, 24, Qt.KeepAspectRatio, Qt.SmoothTransformation)\n    def paintEvent(self, e):\n        painter = QPainter(self)\n        painter.setRenderHints(\n            QPainter.SmoothPixmapTransform | QPainter.Antialiasing)",
        "detail": "app.components.avatar_widget",
        "documentation": {}
    },
    {
        "label": "LinkCard",
        "kind": 6,
        "importPath": "app.components.link_card",
        "description": "app.components.link_card",
        "peekOfCode": "class LinkCard(QFrame):\n    def __init__(self, icon, title, content, url, parent=None):\n        super().__init__(parent=parent)\n        self.url = QUrl(url)\n        self.setFixedSize(198, 220)\n        self.iconWidget = IconWidget(icon, self)\n        self.titleLabel = QLabel(title, self)\n        self.contentLabel = QLabel(TextWrap.wrap(content, 28, False)[0], self)\n        self.urlWidget = IconWidget(FluentIcon.LINK, self)\n        self.__initWidget()",
        "detail": "app.components.link_card",
        "documentation": {}
    },
    {
        "label": "LinkCardView",
        "kind": 6,
        "importPath": "app.components.link_card",
        "description": "app.components.link_card",
        "peekOfCode": "class LinkCardView(SingleDirectionScrollArea):\n    \"\"\" Link card view \"\"\"\n    def __init__(self, parent=None):\n        super().__init__(parent, Qt.Horizontal)\n        self.view = QWidget(self)\n        self.hBoxLayout = QHBoxLayout(self.view)\n        self.hBoxLayout.setContentsMargins(36, 0, 0, 0)\n        self.hBoxLayout.setSpacing(12)\n        self.hBoxLayout.setAlignment(Qt.AlignLeft)\n        self.setWidget(self.view)",
        "detail": "app.components.link_card",
        "documentation": {}
    },
    {
        "label": "SampleCard",
        "kind": 6,
        "importPath": "app.components.sample_card",
        "description": "app.components.sample_card",
        "peekOfCode": "class SampleCard(QFrame):\n    \"\"\" Sample card \"\"\"\n    def __init__(self, icon, title, content, routeKey, index, parent=None):\n        super().__init__(parent=parent)\n        self.index = index\n        self.routekey = routeKey\n        self.iconWidget = IconWidget(icon, self)\n        self.titleLabel = QLabel(title, self)\n        self.contentLabel = QLabel(TextWrap.wrap(content, 45, False)[0], self)\n        self.hBoxLayout = QHBoxLayout(self)",
        "detail": "app.components.sample_card",
        "documentation": {}
    },
    {
        "label": "SampleCardView",
        "kind": 6,
        "importPath": "app.components.sample_card",
        "description": "app.components.sample_card",
        "peekOfCode": "class SampleCardView(QWidget):\n    \"\"\" Sample card view \"\"\"\n    def __init__(self, title: str, parent=None):\n        super().__init__(parent=parent)\n        self.titleLabel = QLabel(title, self)\n        self.vBoxLayout = QVBoxLayout(self)\n        self.flowLayout = FlowLayout()\n        self.vBoxLayout.setContentsMargins(36, 0, 36, 0)\n        self.vBoxLayout.setSpacing(10)\n        self.flowLayout.setContentsMargins(0, 0, 0, 0)",
        "detail": "app.components.sample_card",
        "documentation": {}
    },
    {
        "label": "qInitResources",
        "kind": 2,
        "importPath": "app.resource.resource_rc",
        "description": "app.resource.resource_rc",
        "peekOfCode": "def qInitResources():\n    QtCore.qRegisterResourceData(0x03, qt_resource_struct, qt_resource_name, qt_resource_data)\ndef qCleanupResources():\n    QtCore.qUnregisterResourceData(0x03, qt_resource_struct, qt_resource_name, qt_resource_data)\nqInitResources()",
        "detail": "app.resource.resource_rc",
        "documentation": {}
    },
    {
        "label": "qCleanupResources",
        "kind": 2,
        "importPath": "app.resource.resource_rc",
        "description": "app.resource.resource_rc",
        "peekOfCode": "def qCleanupResources():\n    QtCore.qUnregisterResourceData(0x03, qt_resource_struct, qt_resource_name, qt_resource_data)\nqInitResources()",
        "detail": "app.resource.resource_rc",
        "documentation": {}
    },
    {
        "label": "qt_resource_data",
        "kind": 5,
        "importPath": "app.resource.resource_rc",
        "description": "app.resource.resource_rc",
        "peekOfCode": "qt_resource_data = b\"\\\n\\x00\\x05\\x17\\xd1\\\n\\xff\\\n\\xd8\\xff\\xdb\\x00\\x84\\x00\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\\n\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\\n\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\\n\\x01\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x03\\x03\\x03\\x03\\\n\\x03\\x03\\x03\\x03\\x03\\x03\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x02\\x01\\x01\\\n\\x02\\x02\\x02\\x01\\x02\\x02\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\\n\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\x03\\",
        "detail": "app.resource.resource_rc",
        "documentation": {}
    },
    {
        "label": "\\x0c\\xbe\\xb3\\xea\\x7fY",
        "kind": 5,
        "importPath": "app.resource.resource_rc",
        "description": "app.resource.resource_rc",
        "peekOfCode": "\\x0c\\xbe\\xb3\\xea\\x7fY = \\xe1\\x8a\\xec\\xe0\\x11\\xee\\x19\\\n\\xf5[\\xe5\\xb2\\x08\\xd66\\xcb\\x02\\xa9\\xac\\xf6\\xa9X\\x04o\\\nk\\xa9\\x11\\xbc\\x11\\x93\\xe2,\\x22e\\x17i;;^\\xdb\\\n.\\xe5v\\xcb\\xf9\\xdf\\x221\\x92\\x94a_\\x9bv.\\xe9\\\n\\x91\\xe5\\x1f\\x99|\\x8d\\x1d;\\xf4\\x8f.\\xe0\\xc3G\\xc1\\xd7\\\n\\xc0[M17\\xfe\\x90\\xdf\\xfa\\xe1#+\\xdcK\\x1b\\x03\\\n\\xbf\\x1d\\xea\\xdc\\x1e\\xbb\\x86_~\\x99\\x98\\xa8@\\x16R\\x0c\\\n\\xfe\\x17\\xe7\\xaem\\xc6\\x8c\\x83\\x93\\xde*\\xd4\\x90\\xeb\\xd8\\xb2\\\n\\xc8\\x97\\x22\\x1aZ\\xb1>\\xb6\\x97\\xcd\\x94$3\\x07\\x9c\\xa6\\\n.#+\\x5cn\\xe0\\xee2\\xc7*7\\xb3\\x11\\xc5V\\x05\\",
        "detail": "app.resource.resource_rc",
        "documentation": {}
    },
    {
        "label": "qt_resource_name",
        "kind": 5,
        "importPath": "app.resource.resource_rc",
        "description": "app.resource.resource_rc",
        "peekOfCode": "qt_resource_name = b\"\\\n\\x00\\x07\\\n\\x0d\\x83,Y\\\n\\x00g\\\n\\x00a\\x00l\\x00l\\x00e\\x00r\\x00y\\\n\\x00\\x03\\\n\\x00\\x00x\\xa3\\\n\\x00q\\\n\\x00s\\x00s\\\n\\x00\\x04\\",
        "detail": "app.resource.resource_rc",
        "documentation": {}
    },
    {
        "label": "qt_resource_struct",
        "kind": 5,
        "importPath": "app.resource.resource_rc",
        "description": "app.resource.resource_rc",
        "peekOfCode": "qt_resource_struct = b\"\\\n\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x01\\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x02\\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x00\\x14\\x00\\x02\\x00\\x00\\x00\\x02\\x00\\x00\\x00|\\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x00 \\x00\\x02\\x00\\x00\\x00\\x02\\x00\\x00\\x00z\\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\\n\\x00\\x00\\x00.\\x00\\x02\\x00\\x00\\x00\\x0b\\x00\\x00\\x00\\x05\\",
        "detail": "app.resource.resource_rc",
        "documentation": {}
    },
    {
        "label": "BasicInputInterface",
        "kind": 6,
        "importPath": "app.view.basic_input_interface",
        "description": "app.view.basic_input_interface",
        "peekOfCode": "class BasicInputInterface(GalleryInterface):\n    \"\"\" Basic input interface \"\"\"\n    def __init__(self, parent=None):\n        translator = Translator()\n        super().__init__(\n            title=translator.basicInput,\n            subtitle='qfluentwidgets.components.widgets',\n            parent=parent\n        )\n        # simple push button",
        "detail": "app.view.basic_input_interface",
        "documentation": {}
    },
    {
        "label": "DateTimeInterface",
        "kind": 6,
        "importPath": "app.view.date_time_interface",
        "description": "app.view.date_time_interface",
        "peekOfCode": "class DateTimeInterface(GalleryInterface):\n    \"\"\" Date time interface \"\"\"\n    def __init__(self, parent=None):\n        t = Translator()\n        super().__init__(\n            title=t.dateTime,\n            subtitle='qfluentwidgets.components.date_time',\n            parent=parent\n        )\n        # date picker",
        "detail": "app.view.date_time_interface",
        "documentation": {}
    },
    {
        "label": "DialogInterface",
        "kind": 6,
        "importPath": "app.view.dialog_interface",
        "description": "app.view.dialog_interface",
        "peekOfCode": "class DialogInterface(GalleryInterface):\n    \"\"\" Dialog interface \"\"\"\n    def __init__(self, parent=None):\n        t = Translator()\n        super().__init__(\n            title=t.dialogs,\n            subtitle='qfluentwidgets.components.dialog_box',\n            parent=parent\n        )\n        button = PushButton(self.tr('Show dialog'))",
        "detail": "app.view.dialog_interface",
        "documentation": {}
    },
    {
        "label": "SeparatorWidget",
        "kind": 6,
        "importPath": "app.view.gallery_interface",
        "description": "app.view.gallery_interface",
        "peekOfCode": "class SeparatorWidget(QWidget):\n    \"\"\" Seperator widget \"\"\"\n    def __init__(self, parent=None):\n        super().__init__(parent=parent)\n        self.setFixedSize(6, 16)\n    def paintEvent(self, e):\n        painter = QPainter(self)\n        pen = QPen(1)\n        pen.setCosmetic(True)\n        c = QColor(255, 255, 255, 21) if isDarkTheme() else QColor(0, 0, 0, 15)",
        "detail": "app.view.gallery_interface",
        "documentation": {}
    },
    {
        "label": "ToolBar",
        "kind": 6,
        "importPath": "app.view.gallery_interface",
        "description": "app.view.gallery_interface",
        "peekOfCode": "class ToolBar(QWidget):\n    \"\"\" Tool bar \"\"\"\n    def __init__(self, title, subtitle, parent=None):\n        super().__init__(parent=parent)\n        self.titleLabel = QLabel(title, self)\n        self.subtitleLabel = QLabel(subtitle, self)\n        self.documentButton = PushButton(\n            self.tr('Documentation'), self, FluentIcon.DOCUMENT)\n        self.sourceButton = PushButton(self.tr('Source'), self, FluentIcon.GITHUB)\n        self.themeButton = ToolButton(FluentIcon.CONSTRACT, self)",
        "detail": "app.view.gallery_interface",
        "documentation": {}
    },
    {
        "label": "ExampleCard",
        "kind": 6,
        "importPath": "app.view.gallery_interface",
        "description": "app.view.gallery_interface",
        "peekOfCode": "class ExampleCard(QWidget):\n    \"\"\" Example card \"\"\"\n    def __init__(self, title, widget: QWidget, sourcePath, stretch=0, parent=None):\n        super().__init__(parent=parent)\n        self.widget = widget\n        self.stretch = stretch\n        self.titleLabel = QLabel(title, self)\n        self.card = QFrame(self)\n        self.sourceWidget = QFrame(self.card)\n        self.sourcePath = sourcePath",
        "detail": "app.view.gallery_interface",
        "documentation": {}
    },
    {
        "label": "GalleryInterface",
        "kind": 6,
        "importPath": "app.view.gallery_interface",
        "description": "app.view.gallery_interface",
        "peekOfCode": "class GalleryInterface(ScrollArea):\n    \"\"\" Gallery interface \"\"\"\n    def __init__(self, title: str, subtitle: str, parent=None):\n        \"\"\"\n        Parameters\n        ----------\n        title: str\n            The title of gallery\n        subtitle: str\n            The subtitle of gallery",
        "detail": "app.view.gallery_interface",
        "documentation": {}
    },
    {
        "label": "BannerWidget",
        "kind": 6,
        "importPath": "app.view.home_interface",
        "description": "app.view.home_interface",
        "peekOfCode": "class BannerWidget(QWidget):\n    \"\"\" Banner widget \"\"\"\n    def __init__(self, parent=None):\n        super().__init__(parent=parent)\n        self.setFixedHeight(336)\n        self.vBoxLayout = QVBoxLayout(self)\n        self.galleryLabel = QLabel('Fluent Gallery', self)\n        self.banner = QPixmap(':/gallery/images/header1.png')\n        self.linkCardView = LinkCardView(self)\n        self.galleryLabel.setObjectName('galleryLabel')",
        "detail": "app.view.home_interface",
        "documentation": {}
    },
    {
        "label": "HomeInterface",
        "kind": 6,
        "importPath": "app.view.home_interface",
        "description": "app.view.home_interface",
        "peekOfCode": "class HomeInterface(ScrollArea):\n    \"\"\" Home interface \"\"\"\n    def __init__(self, parent=None):\n        super().__init__(parent=parent)\n        self.banner = BannerWidget(self)\n        self.view = QWidget(self)\n        self.vBoxLayout = QVBoxLayout(self.view)\n        self.__initWidget()\n        self.loadSamples()\n    def __initWidget(self):",
        "detail": "app.view.home_interface",
        "documentation": {}
    },
    {
        "label": "LineEdit",
        "kind": 6,
        "importPath": "app.view.icon_interface",
        "description": "app.view.icon_interface",
        "peekOfCode": "class LineEdit(SearchLineEdit):\n    \"\"\" Search line edit \"\"\"\n    def __init__(self, parent=None):\n        super().__init__(parent)\n        self.setPlaceholderText(self.tr('Search icons'))\n        self.setFixedWidth(304)\n        self.textChanged.connect(self.search)\nclass IconCard(QFrame):\n    \"\"\" Icon card \"\"\"\n    clicked = pyqtSignal(FluentIcon)",
        "detail": "app.view.icon_interface",
        "documentation": {}
    },
    {
        "label": "IconCard",
        "kind": 6,
        "importPath": "app.view.icon_interface",
        "description": "app.view.icon_interface",
        "peekOfCode": "class IconCard(QFrame):\n    \"\"\" Icon card \"\"\"\n    clicked = pyqtSignal(FluentIcon)\n    def __init__(self, icon: FluentIcon, parent=None):\n        super().__init__(parent=parent)\n        self.icon = icon\n        self.isSelected = False\n        self.iconWidget = IconWidget(icon, self)\n        self.nameLabel = QLabel(self)\n        self.vBoxLayout = QVBoxLayout(self)",
        "detail": "app.view.icon_interface",
        "documentation": {}
    },
    {
        "label": "IconInfoPanel",
        "kind": 6,
        "importPath": "app.view.icon_interface",
        "description": "app.view.icon_interface",
        "peekOfCode": "class IconInfoPanel(QFrame):\n    \"\"\" Icon info panel \"\"\"\n    def __init__(self, icon: FluentIcon, parent=None):\n        super().__init__(parent=parent)\n        self.nameLabel = QLabel(icon.value, self)\n        self.iconWidget = IconWidget(icon, self)\n        self.iconNameTitleLabel = QLabel(self.tr('Icon name'), self)\n        self.iconNameLabel = QLabel(icon.value, self)\n        self.enumNameTitleLabel = QLabel(self.tr('Enum member'), self)\n        self.enumNameLabel = QLabel(\"FluentIcon.\" + icon.name, self)",
        "detail": "app.view.icon_interface",
        "documentation": {}
    },
    {
        "label": "IconCardView",
        "kind": 6,
        "importPath": "app.view.icon_interface",
        "description": "app.view.icon_interface",
        "peekOfCode": "class IconCardView(QWidget):\n    \"\"\" Icon card view \"\"\"\n    def __init__(self, parent=None):\n        super().__init__(parent=parent)\n        self.trie = Trie()\n        self.iconLibraryLabel = QLabel(self.tr('Fluent Icons Library'), self)\n        self.searchLineEdit = LineEdit(self)\n        self.view = QFrame(self)\n        self.scrollArea = SmoothScrollArea(self.view)\n        self.scrollWidget = QWidget(self.scrollArea)",
        "detail": "app.view.icon_interface",
        "documentation": {}
    },
    {
        "label": "IconInterface",
        "kind": 6,
        "importPath": "app.view.icon_interface",
        "description": "app.view.icon_interface",
        "peekOfCode": "class IconInterface(GalleryInterface):\n    \"\"\" Icon interface \"\"\"\n    def __init__(self, parent=None):\n        t = Translator()\n        super().__init__(\n            title=t.icons,\n            subtitle=\"qfluentwidgets.common.icon\",\n            parent=parent\n        )\n        self.iconView = IconCardView(self)",
        "detail": "app.view.icon_interface",
        "documentation": {}
    },
    {
        "label": "LayoutInterface",
        "kind": 6,
        "importPath": "app.view.layout_interface",
        "description": "app.view.layout_interface",
        "peekOfCode": "class LayoutInterface(GalleryInterface):\n    \"\"\" Layout interface \"\"\"\n    def __init__(self, parent=None):\n        t = Translator()\n        super().__init__(\n            title=t.layout,\n            subtitle=\"qfluentwidgets.components.layout\",\n            parent=parent\n        )\n        self.addExampleCard(",
        "detail": "app.view.layout_interface",
        "documentation": {}
    },
    {
        "label": "StackedWidget",
        "kind": 6,
        "importPath": "app.view.main_window",
        "description": "app.view.main_window",
        "peekOfCode": "class StackedWidget(QFrame):\n    \"\"\" Stacked widget \"\"\"\n    currentWidgetChanged = pyqtSignal(QWidget)\n    def __init__(self, parent=None):\n        super().__init__(parent=parent)\n        self.hBoxLayout = QHBoxLayout(self)\n        self.view = PopUpAniStackedWidget(self)\n        self.hBoxLayout.setContentsMargins(0, 0, 0, 0)\n        self.hBoxLayout.addWidget(self.view)\n        self.view.currentChanged.connect(",
        "detail": "app.view.main_window",
        "documentation": {}
    },
    {
        "label": "MainWindow",
        "kind": 6,
        "importPath": "app.view.main_window",
        "description": "app.view.main_window",
        "peekOfCode": "class MainWindow(FramelessWindow):\n    def __init__(self):\n        super().__init__()\n        self.setTitleBar(CustomTitleBar(self))\n        self.hBoxLayout = QHBoxLayout(self)\n        self.widgetLayout = QHBoxLayout()\n        self.stackWidget = StackedWidget(self)\n        self.navigationInterface = NavigationInterface(self, True, True)\n        # create sub interface\n        self.homeInterface = HomeInterface(self)",
        "detail": "app.view.main_window",
        "documentation": {}
    },
    {
        "label": "MaterialInterface",
        "kind": 6,
        "importPath": "app.view.material_interface",
        "description": "app.view.material_interface",
        "peekOfCode": "class MaterialInterface(GalleryInterface):\n    \"\"\" Material interface \"\"\"\n    def __init__(self, parent=None):\n        t = Translator()\n        super().__init__(\n            title=t.material,\n            subtitle='qfluentwidgets.components.widgets',\n            parent=parent\n        )\n        self.label = AcrylicLabel(",
        "detail": "app.view.material_interface",
        "documentation": {}
    },
    {
        "label": "MenuInterface",
        "kind": 6,
        "importPath": "app.view.menu_interface",
        "description": "app.view.menu_interface",
        "peekOfCode": "class MenuInterface(GalleryInterface):\n    \"\"\" Menu interface \"\"\"\n    def __init__(self, parent=None):\n        t = Translator()\n        super().__init__(\n            title=t.menus,\n            subtitle='qfluentwidgets.components.widgets',\n            parent=parent\n        )\n        button = PushButton(self.tr('Show menu'))",
        "detail": "app.view.menu_interface",
        "documentation": {}
    },
    {
        "label": "NavigationViewInterface",
        "kind": 6,
        "importPath": "app.view.navigation_view_interface",
        "description": "app.view.navigation_view_interface",
        "peekOfCode": "class NavigationViewInterface(GalleryInterface):\n    \"\"\" Navigation view interface \"\"\"\n    def __init__(self, parent=None):\n        t = Translator()\n        super().__init__(\n            title=t.navigation,\n            subtitle=\"qfluentwidgets.components.widgets\",\n            parent=parent\n        )\n        self.addExampleCard(",
        "detail": "app.view.navigation_view_interface",
        "documentation": {}
    },
    {
        "label": "PivotInterface",
        "kind": 6,
        "importPath": "app.view.navigation_view_interface",
        "description": "app.view.navigation_view_interface",
        "peekOfCode": "class PivotInterface(QWidget):\n    \"\"\" Pivot interface \"\"\"\n    def __init__(self, parent=None):\n        super().__init__(parent=parent)\n        self.setFixedSize(300, 200)\n        self.pivot = Pivot(self)\n        self.stackedWidget = QStackedWidget(self)\n        self.vBoxLayout = QVBoxLayout(self)\n        self.songInterface = QLabel('Song Interface', self)\n        self.albumInterface = QLabel('Album Interface', self)",
        "detail": "app.view.navigation_view_interface",
        "documentation": {}
    },
    {
        "label": "ScrollInterface",
        "kind": 6,
        "importPath": "app.view.scroll_interface",
        "description": "app.view.scroll_interface",
        "peekOfCode": "class ScrollInterface(GalleryInterface):\n    \"\"\" Scroll interface \"\"\"\n    def __init__(self, parent=None):\n        t = Translator()\n        super().__init__(\n            title=t.scroll,\n            subtitle=\"qfluentwidgets.components.widgets\",\n            parent=parent\n        )\n        # scroll area",
        "detail": "app.view.scroll_interface",
        "documentation": {}
    },
    {
        "label": "SettingInterface",
        "kind": 6,
        "importPath": "app.view.setting_interface",
        "description": "app.view.setting_interface",
        "peekOfCode": "class SettingInterface(ScrollArea):\n    \"\"\" Setting interface \"\"\"\n    checkUpdateSig = pyqtSignal()\n    musicFoldersChanged = pyqtSignal(list)\n    acrylicEnableChanged = pyqtSignal(bool)\n    downloadFolderChanged = pyqtSignal(str)\n    minimizeToTrayChanged = pyqtSignal(bool)\n    def __init__(self, parent=None):\n        super().__init__(parent=parent)\n        self.scrollWidget = QWidget()",
        "detail": "app.view.setting_interface",
        "documentation": {}
    },
    {
        "label": "Widget",
        "kind": 6,
        "importPath": "app.view.simple_interface",
        "description": "app.view.simple_interface",
        "peekOfCode": "class Widget(QFrame):\n    def __init__(self, text: str, parent=None):\n        super().__init__(parent=parent)\n        self.label = QLabel(text, self)\n        self.label.setAlignment(Qt.AlignCenter)\n        self.hBoxLayout = QHBoxLayout(self)\n        self.hBoxLayout.addWidget(self.label, 1, Qt.AlignCenter)\n        self.setObjectName(text.replace(' ', '-'))\nclass SeparatorWidget(QWidget):\n    \"\"\" Seperator widget \"\"\"",
        "detail": "app.view.simple_interface",
        "documentation": {}
    },
    {
        "label": "SeparatorWidget",
        "kind": 6,
        "importPath": "app.view.simple_interface",
        "description": "app.view.simple_interface",
        "peekOfCode": "class SeparatorWidget(QWidget):\n    \"\"\" Seperator widget \"\"\"\n    def __init__(self, parent=None):\n        super().__init__(parent=parent)\n        self.setFixedSize(6, 16)\n    def paintEvent(self, e):\n        painter = QPainter(self)\n        pen = QPen(1)\n        pen.setCosmetic(True)\n        c = QColor(255, 255, 255, 21) if isDarkTheme() else QColor(0, 0, 0, 15)",
        "detail": "app.view.simple_interface",
        "documentation": {}
    },
    {
        "label": "ToolBar",
        "kind": 6,
        "importPath": "app.view.simple_interface",
        "description": "app.view.simple_interface",
        "peekOfCode": "class ToolBar(QWidget):\n    \"\"\" Tool bar \"\"\"\n    def __init__(self, title, subtitle, parent=None):\n        super().__init__(parent=parent)\n        self.titleLabel = QLabel(title, self)\n        self.subtitleLabel = QLabel(subtitle, self)\n        \"\"\"\n        self.documentButton = PushButton(\n            self.tr('Documentation'), self, FluentIcon.DOCUMENT)\n        self.sourceButton = PushButton(self.tr('Source'), self, FluentIcon.GITHUB)",
        "detail": "app.view.simple_interface",
        "documentation": {}
    },
    {
        "label": "SimpleCard",
        "kind": 6,
        "importPath": "app.view.simple_interface",
        "description": "app.view.simple_interface",
        "peekOfCode": "class SimpleCard(QWidget):\n    \"\"\" Simple card \"\"\"\n    def __init__(self, title, widget: QWidget, stretch=0, parent=None):\n        super().__init__(parent=parent)\n        self.widget = widget\n        self.stretch = stretch\n        #self.titleLabel = QLabel(title, self)\n        self.titleLabel = Widget(title,self)\n        #self.titleLabel.setMaximumHeight(80)\n        self.card = QFrame(self)",
        "detail": "app.view.simple_interface",
        "documentation": {}
    },
    {
        "label": "SimpleInterface",
        "kind": 6,
        "importPath": "app.view.simple_interface",
        "description": "app.view.simple_interface",
        "peekOfCode": "class SimpleInterface(ScrollArea):\n    \"\"\" Simple interface \"\"\"\n    def __init__(self, title: str, subtitle: str, parent=None):\n        \"\"\"\n        Parameters\n        ----------\n        title: str\n            The title of gallery\n        subtitle: str\n            The subtitle of gallery",
        "detail": "app.view.simple_interface",
        "documentation": {}
    },
    {
        "label": "StatusInfoInterface",
        "kind": 6,
        "importPath": "app.view.status_info_interface",
        "description": "app.view.status_info_interface",
        "peekOfCode": "class StatusInfoInterface(GalleryInterface):\n    \"\"\" Status info interface \"\"\"\n    def __init__(self, parent=None):\n        t = Translator()\n        super().__init__(\n            title=t.statusInfo,\n            subtitle=\"qfluentwidgets.components.widgets\",\n            parent=parent\n        )\n        # state tool tip",
        "detail": "app.view.status_info_interface",
        "documentation": {}
    },
    {
        "label": "ProgressWidget",
        "kind": 6,
        "importPath": "app.view.status_info_interface",
        "description": "app.view.status_info_interface",
        "peekOfCode": "class ProgressWidget(QWidget):\n    def __init__(self, widget, parent=None):\n        super().__init__(parent=parent)\n        hBoxLayout = QHBoxLayout(self)\n        self.spinBox = SpinBox(self)\n        self.spinBox.valueChanged.connect(widget.setValue)\n        self.spinBox.setRange(0, 100)\n        hBoxLayout.addWidget(widget)\n        hBoxLayout.addSpacing(50)\n        hBoxLayout.addWidget(QLabel(self.tr('Progress')))",
        "detail": "app.view.status_info_interface",
        "documentation": {}
    },
    {
        "label": "TextInterface",
        "kind": 6,
        "importPath": "app.view.text_interface",
        "description": "app.view.text_interface",
        "peekOfCode": "class TextInterface(GalleryInterface):\n    \"\"\" Text interface \"\"\"\n    def __init__(self, parent=None):\n        t = Translator()\n        super().__init__(\n            title=t.text,\n            subtitle=\"qfluentwidgets.components.widgets\",\n            parent=parent\n        )\n        # spin box",
        "detail": "app.view.text_interface",
        "documentation": {}
    },
    {
        "label": "CustomTitleBar",
        "kind": 6,
        "importPath": "app.view.title_bar",
        "description": "app.view.title_bar",
        "peekOfCode": "class CustomTitleBar(TitleBar):\n    \"\"\" Title bar with icon and title \"\"\"\n    def __init__(self, parent):\n        super().__init__(parent)\n        self.setFixedHeight(48)\n        self.hBoxLayout.removeWidget(self.minBtn)\n        self.hBoxLayout.removeWidget(self.maxBtn)\n        self.hBoxLayout.removeWidget(self.closeBtn)\n        # add window icon\n        self.iconLabel = QLabel(self)",
        "detail": "app.view.title_bar",
        "documentation": {}
    },
    {
        "label": "ViewInterface",
        "kind": 6,
        "importPath": "app.view.view_interface",
        "description": "app.view.view_interface",
        "peekOfCode": "class ViewInterface(GalleryInterface):\n    \"\"\" View interface \"\"\"\n    def __init__(self, parent=None):\n        t = Translator()\n        super().__init__(\n            title=t.view,\n            subtitle=\"qfluentwidgets.components.widgets\",\n            parent=parent\n        )\n        # list view",
        "detail": "app.view.view_interface",
        "documentation": {}
    },
    {
        "label": "Frame",
        "kind": 6,
        "importPath": "app.view.view_interface",
        "description": "app.view.view_interface",
        "peekOfCode": "class Frame(QFrame):\n    def __init__(self, parent=None):\n        super().__init__(parent=parent)\n        self.hBoxLayout = QHBoxLayout(self)\n        self.hBoxLayout.setContentsMargins(0, 8, 0, 0)\n        self.setObjectName('frame')\n        StyleSheet.VIEW_INTERFACE.apply(self)\n    def addWidget(self, widget):\n        self.hBoxLayout.addWidget(widget)\nclass ListFrame(Frame):",
        "detail": "app.view.view_interface",
        "documentation": {}
    },
    {
        "label": "ListFrame",
        "kind": 6,
        "importPath": "app.view.view_interface",
        "description": "app.view.view_interface",
        "peekOfCode": "class ListFrame(Frame):\n    def __init__(self, parent=None):\n        super().__init__(parent)\n        self.listWidget = ListWidget(self)\n        self.addWidget(self.listWidget)\n        stands = [\n            self.tr(\"Star Platinum\"), self.tr(\"Hierophant Green\"),\n            self.tr(\"Made in Haven\"), self.tr(\"King Crimson\"),\n            self.tr(\"Silver Chariot\"), self.tr(\"Crazy diamond\"),\n            self.tr(\"Metallica\"), self.tr(\"Another One Bites The Dust\"),",
        "detail": "app.view.view_interface",
        "documentation": {}
    },
    {
        "label": "TreeFrame",
        "kind": 6,
        "importPath": "app.view.view_interface",
        "description": "app.view.view_interface",
        "peekOfCode": "class TreeFrame(Frame):\n    def __init__(self, parent=None, enableCheck=False):\n        super().__init__(parent)\n        self.tree = TreeWidget(self)\n        self.addWidget(self.tree)\n        item1 = QTreeWidgetItem([self.tr('JoJo 1 - Phantom Blood')])\n        item1.addChildren([\n            QTreeWidgetItem([self.tr('Jonathan Joestar')]),\n            QTreeWidgetItem([self.tr('Dio Brando')]),\n            QTreeWidgetItem([self.tr('Will A. Zeppeli')]),",
        "detail": "app.view.view_interface",
        "documentation": {}
    },
    {
        "label": "TableFrame",
        "kind": 6,
        "importPath": "app.view.view_interface",
        "description": "app.view.view_interface",
        "peekOfCode": "class TableFrame(Frame):\n    def __init__(self, parent=None):\n        super().__init__(parent)\n        self.table = TableWidget(self)\n        self.addWidget(self.table)\n        self.table.verticalHeader().hide()\n        self.table.setColumnCount(5)\n        self.table.setRowCount(60)\n        self.table.setHorizontalHeaderLabels([\n            self.tr('Title'), self.tr('Artist'), self.tr('Album'),",
        "detail": "app.view.view_interface",
        "documentation": {}
    },
    {
        "label": "getOutputImgPath",
        "kind": 2,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "def getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"\n    return f\"{OutputPath}/{OutputImgPath}/{OutputImgName}\"",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "WindowTitle",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "WindowTitle = \"AndreaNeoNovelDownloader\"\nWindowIcon = \"app/resource/images/logo.png\"\n# ! 裁切设置\n# * 裁剪坐标为[y0:y1, x0:x1]\n#ImgCutPos = [170,2360,50,1000] # 裁剪坐标为[y0:y1, x0:x1]\n# ? Redmi Note12T Pro [170,2360,50,1000]\n# ? Redmi Note7 Pro   [145,2200,50,1000]\nImgCutPos = [145,2200,50,1000]\n# ! 识别设置\n    # * 识别增强",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "WindowIcon",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "WindowIcon = \"app/resource/images/logo.png\"\n# ! 裁切设置\n# * 裁剪坐标为[y0:y1, x0:x1]\n#ImgCutPos = [170,2360,50,1000] # 裁剪坐标为[y0:y1, x0:x1]\n# ? Redmi Note12T Pro [170,2360,50,1000]\n# ? Redmi Note7 Pro   [145,2200,50,1000]\nImgCutPos = [145,2200,50,1000]\n# ! 识别设置\n    # * 识别增强\nZoomLevel = 4",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "#ImgCutPos",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "#ImgCutPos = [170,2360,50,1000] # 裁剪坐标为[y0:y1, x0:x1]\n# ? Redmi Note12T Pro [170,2360,50,1000]\n# ? Redmi Note7 Pro   [145,2200,50,1000]\nImgCutPos = [145,2200,50,1000]\n# ! 识别设置\n    # * 识别增强\nZoomLevel = 4\n    # * 标题识别\nTitleThresholdHigh = 70\nEnable_TitleHigh = False",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "ImgCutPos",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "ImgCutPos = [145,2200,50,1000]\n# ! 识别设置\n    # * 识别增强\nZoomLevel = 4\n    # * 标题识别\nTitleThresholdHigh = 70\nEnable_TitleHigh = False\nTitleRegularExpression = \"^第.*章.*\"\nEnable_TitleRegularExpression = True\n    # * 段首识别",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "ZoomLevel",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "ZoomLevel = 4\n    # * 标题识别\nTitleThresholdHigh = 70\nEnable_TitleHigh = False\nTitleRegularExpression = \"^第.*章.*\"\nEnable_TitleRegularExpression = True\n    # * 段首识别\nHeaderThresholdIndentation = 100\nEnable_HeaderIndentation = True\n    # * 换行识别",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "TitleThresholdHigh",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "TitleThresholdHigh = 70\nEnable_TitleHigh = False\nTitleRegularExpression = \"^第.*章.*\"\nEnable_TitleRegularExpression = True\n    # * 段首识别\nHeaderThresholdIndentation = 100\nEnable_HeaderIndentation = True\n    # * 换行识别\nLinefeedThresholdDeltaHigh = 10\nEnable_LinefeedThresholdDeltaHigh = True",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "Enable_TitleHigh",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "Enable_TitleHigh = False\nTitleRegularExpression = \"^第.*章.*\"\nEnable_TitleRegularExpression = True\n    # * 段首识别\nHeaderThresholdIndentation = 100\nEnable_HeaderIndentation = True\n    # * 换行识别\nLinefeedThresholdDeltaHigh = 10\nEnable_LinefeedThresholdDeltaHigh = True\n    # * 截图翻页等待时间",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "TitleRegularExpression",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "TitleRegularExpression = \"^第.*章.*\"\nEnable_TitleRegularExpression = True\n    # * 段首识别\nHeaderThresholdIndentation = 100\nEnable_HeaderIndentation = True\n    # * 换行识别\nLinefeedThresholdDeltaHigh = 10\nEnable_LinefeedThresholdDeltaHigh = True\n    # * 截图翻页等待时间\nNextPageWaitTime = 0.5",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "Enable_TitleRegularExpression",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "Enable_TitleRegularExpression = True\n    # * 段首识别\nHeaderThresholdIndentation = 100\nEnable_HeaderIndentation = True\n    # * 换行识别\nLinefeedThresholdDeltaHigh = 10\nEnable_LinefeedThresholdDeltaHigh = True\n    # * 截图翻页等待时间\nNextPageWaitTime = 0.5\n    # * 索引设置",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "HeaderThresholdIndentation",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "HeaderThresholdIndentation = 100\nEnable_HeaderIndentation = True\n    # * 换行识别\nLinefeedThresholdDeltaHigh = 10\nEnable_LinefeedThresholdDeltaHigh = True\n    # * 截图翻页等待时间\nNextPageWaitTime = 0.5\n    # * 索引设置\nMaximumPage = 2147483647\n# ! OCR设置",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "Enable_HeaderIndentation",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "Enable_HeaderIndentation = True\n    # * 换行识别\nLinefeedThresholdDeltaHigh = 10\nEnable_LinefeedThresholdDeltaHigh = True\n    # * 截图翻页等待时间\nNextPageWaitTime = 0.5\n    # * 索引设置\nMaximumPage = 2147483647\n# ! OCR设置\nRecModel = \"densenet_lite_136-gru\"",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "LinefeedThresholdDeltaHigh",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "LinefeedThresholdDeltaHigh = 10\nEnable_LinefeedThresholdDeltaHigh = True\n    # * 截图翻页等待时间\nNextPageWaitTime = 0.5\n    # * 索引设置\nMaximumPage = 2147483647\n# ! OCR设置\nRecModel = \"densenet_lite_136-gru\"\nDetModel = \"db_resnet34\"\nOcrProcessorsType = \"cuda\"  # ['cpu', 'gpu', 'cuda']",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "Enable_LinefeedThresholdDeltaHigh",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "Enable_LinefeedThresholdDeltaHigh = True\n    # * 截图翻页等待时间\nNextPageWaitTime = 0.5\n    # * 索引设置\nMaximumPage = 2147483647\n# ! OCR设置\nRecModel = \"densenet_lite_136-gru\"\nDetModel = \"db_resnet34\"\nOcrProcessorsType = \"cuda\"  # ['cpu', 'gpu', 'cuda']\n# ! 文件路径",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "NextPageWaitTime",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "NextPageWaitTime = 0.5\n    # * 索引设置\nMaximumPage = 2147483647\n# ! OCR设置\nRecModel = \"densenet_lite_136-gru\"\nDetModel = \"db_resnet34\"\nOcrProcessorsType = \"cuda\"  # ['cpu', 'gpu', 'cuda']\n# ! 文件路径\n    # * 临时文件路径\nTempPath = \"R:/Temp\"",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "MaximumPage",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "MaximumPage = 2147483647\n# ! OCR设置\nRecModel = \"densenet_lite_136-gru\"\nDetModel = \"db_resnet34\"\nOcrProcessorsType = \"cuda\"  # ['cpu', 'gpu', 'cuda']\n# ! 文件路径\n    # * 临时文件路径\nTempPath = \"R:/Temp\"\nCapImg = \"cap.png\"\nCroppedImg = \"cv_cut_thor.png\"",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "RecModel",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "RecModel = \"densenet_lite_136-gru\"\nDetModel = \"db_resnet34\"\nOcrProcessorsType = \"cuda\"  # ['cpu', 'gpu', 'cuda']\n# ! 文件路径\n    # * 临时文件路径\nTempPath = \"R:/Temp\"\nCapImg = \"cap.png\"\nCroppedImg = \"cv_cut_thor.png\"\nCapImgPath = f\"{TempPath}/{CapImg}\"\nCroppedImgPath = f\"{TempPath}/{CroppedImg}\"",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "DetModel",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "DetModel = \"db_resnet34\"\nOcrProcessorsType = \"cuda\"  # ['cpu', 'gpu', 'cuda']\n# ! 文件路径\n    # * 临时文件路径\nTempPath = \"R:/Temp\"\nCapImg = \"cap.png\"\nCroppedImg = \"cv_cut_thor.png\"\nCapImgPath = f\"{TempPath}/{CapImg}\"\nCroppedImgPath = f\"{TempPath}/{CroppedImg}\"\n    # * 输出文件路径",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "OcrProcessorsType",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "OcrProcessorsType = \"cuda\"  # ['cpu', 'gpu', 'cuda']\n# ! 文件路径\n    # * 临时文件路径\nTempPath = \"R:/Temp\"\nCapImg = \"cap.png\"\nCroppedImg = \"cv_cut_thor.png\"\nCapImgPath = f\"{TempPath}/{CapImg}\"\nCroppedImgPath = f\"{TempPath}/{CroppedImg}\"\n    # * 输出文件路径\nOutputPath = \"D:/临时文件/noveldownload\"",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "TempPath",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "TempPath = \"R:/Temp\"\nCapImg = \"cap.png\"\nCroppedImg = \"cv_cut_thor.png\"\nCapImgPath = f\"{TempPath}/{CapImg}\"\nCroppedImgPath = f\"{TempPath}/{CroppedImg}\"\n    # * 输出文件路径\nOutputPath = \"D:/临时文件/noveldownload\"\nOutputImgPath = \"img\"\nOutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "CapImg",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "CapImg = \"cap.png\"\nCroppedImg = \"cv_cut_thor.png\"\nCapImgPath = f\"{TempPath}/{CapImg}\"\nCroppedImgPath = f\"{TempPath}/{CroppedImg}\"\n    # * 输出文件路径\nOutputPath = \"D:/临时文件/noveldownload\"\nOutputImgPath = \"img\"\nOutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "CroppedImg",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "CroppedImg = \"cv_cut_thor.png\"\nCapImgPath = f\"{TempPath}/{CapImg}\"\nCroppedImgPath = f\"{TempPath}/{CroppedImg}\"\n    # * 输出文件路径\nOutputPath = \"D:/临时文件/noveldownload\"\nOutputImgPath = \"img\"\nOutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "CapImgPath",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "CapImgPath = f\"{TempPath}/{CapImg}\"\nCroppedImgPath = f\"{TempPath}/{CroppedImg}\"\n    # * 输出文件路径\nOutputPath = \"D:/临时文件/noveldownload\"\nOutputImgPath = \"img\"\nOutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "CroppedImgPath",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "CroppedImgPath = f\"{TempPath}/{CroppedImg}\"\n    # * 输出文件路径\nOutputPath = \"D:/临时文件/noveldownload\"\nOutputImgPath = \"img\"\nOutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"\n    return f\"{OutputPath}/{OutputImgPath}/{OutputImgName}\"",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "OutputPath",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "OutputPath = \"D:/临时文件/noveldownload\"\nOutputImgPath = \"img\"\nOutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"\n    return f\"{OutputPath}/{OutputImgPath}/{OutputImgName}\"",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "OutputImgPath",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "OutputImgPath = \"img\"\nOutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"\n    return f\"{OutputPath}/{OutputImgPath}/{OutputImgName}\"",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "OutputImgFullDir",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "OutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"\n    return f\"{OutputPath}/{OutputImgPath}/{OutputImgName}\"",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "MarkdownName",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "MarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"\n    return f\"{OutputPath}/{OutputImgPath}/{OutputImgName}\"",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "MarkdownPath",
        "kind": 5,
        "importPath": "testcode.config",
        "description": "testcode.config",
        "peekOfCode": "MarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"\n    return f\"{OutputPath}/{OutputImgPath}/{OutputImgName}\"",
        "detail": "testcode.config",
        "documentation": {}
    },
    {
        "label": "ocr",
        "kind": 5,
        "importPath": "testcode.dir",
        "description": "testcode.dir",
        "peekOfCode": "ocr = CnOcr()\nprint(ocr.model_dir)",
        "detail": "testcode.dir",
        "documentation": {}
    },
    {
        "label": "titleValidator",
        "kind": 2,
        "importPath": "testcode.img2md",
        "description": "testcode.img2md",
        "peekOfCode": "def titleValidator(line:dict)->bool:\n    threshold = config.TitleThresholdHigh * config.ZoomLevel\n    # 行高大于阈值即为标题\n    pattern = config.TitleRegularExpression\n    # 使用正则表达式匹配\n    hight = line[\"position\"][3][1] - line[\"position\"][0][1]\n    if(hight >= threshold and config.Enable_TitleHigh):\n        return True\n    elif(re.match(pattern, line[\"text\"], flags=0) != None and config.Enable_TitleRegularExpression):\n        return True",
        "detail": "testcode.img2md",
        "documentation": {}
    },
    {
        "label": "headerValidator",
        "kind": 2,
        "importPath": "testcode.img2md",
        "description": "testcode.img2md",
        "peekOfCode": "def headerValidator(line:dict)->bool:\n    threshold = config.HeaderThresholdIndentation * config.ZoomLevel\n    # 缩进大于阈值即为段首\n    indentation = line[\"position\"][0][0]\n    if(indentation >= threshold and config.Enable_HeaderIndentation):\n        return True\n    else:\n        return False\ndef linesToMd(lines:list)->str:\n    threshold = config.LinefeedThresholdDeltaHigh * config.ZoomLevel",
        "detail": "testcode.img2md",
        "documentation": {}
    },
    {
        "label": "linesToMd",
        "kind": 2,
        "importPath": "testcode.img2md",
        "description": "testcode.img2md",
        "peekOfCode": "def linesToMd(lines:list)->str:\n    threshold = config.LinefeedThresholdDeltaHigh * config.ZoomLevel\n    # y 坐标差大于阈值视为两行\n    end_in_head_threshold = 30 * config.ZoomLevel\n    # 如果段首存在标点符号，且是此页第一行 则插入空格隔断\n    pos_y_previous_sentence:float = lines[0][\"position\"][0][1]\n    text:str = \"\"\n    last_title = False\n    for i in lines:\n        pos_y_now_sentence = i[\"position\"][0][1]",
        "detail": "testcode.img2md",
        "documentation": {}
    },
    {
        "label": "img_fp",
        "kind": 5,
        "importPath": "testcode.img2md",
        "description": "testcode.img2md",
        "peekOfCode": "img_fp = \"./realesrgan-ncnn-vulkan-20220424-windows/output.png\"\nocr = CnOcr(\n    rec_model_name = 'densenet_lite_136-gru',\n    det_model_name = 'db_resnet34',\n    context = 'cpu',  # ['cpu', 'gpu', 'cuda']\n    )\nout = ocr.ocr(img_fp)\ntemp_out = list()\nlast_line = {\"text\":out[0][\"text\"],\"score\":out[0][\"score\"],\"position\":out[0][\"position\"].tolist()}\nend_in_head_threshold = 30 * config.ZoomLevel",
        "detail": "testcode.img2md",
        "documentation": {}
    },
    {
        "label": "ocr",
        "kind": 5,
        "importPath": "testcode.img2md",
        "description": "testcode.img2md",
        "peekOfCode": "ocr = CnOcr(\n    rec_model_name = 'densenet_lite_136-gru',\n    det_model_name = 'db_resnet34',\n    context = 'cpu',  # ['cpu', 'gpu', 'cuda']\n    )\nout = ocr.ocr(img_fp)\ntemp_out = list()\nlast_line = {\"text\":out[0][\"text\"],\"score\":out[0][\"score\"],\"position\":out[0][\"position\"].tolist()}\nend_in_head_threshold = 30 * config.ZoomLevel\nhead_addr = None",
        "detail": "testcode.img2md",
        "documentation": {}
    },
    {
        "label": "out",
        "kind": 5,
        "importPath": "testcode.img2md",
        "description": "testcode.img2md",
        "peekOfCode": "out = ocr.ocr(img_fp)\ntemp_out = list()\nlast_line = {\"text\":out[0][\"text\"],\"score\":out[0][\"score\"],\"position\":out[0][\"position\"].tolist()}\nend_in_head_threshold = 30 * config.ZoomLevel\nhead_addr = None\nindex = 0\nfor i in out:\n    temp_line = {\"text\":i[\"text\"],\"score\":i[\"score\"],\"position\":i[\"position\"].tolist(),\"head\":True,\"end\":True}\n    if((abs(temp_line[\"position\"][0][1] - last_line[\"position\"][0][1]) <= end_in_head_threshold) and (index != 0)):\n        #last_line[\"text\"] = last_line[\"text\"] + temp_line[\"text\"]",
        "detail": "testcode.img2md",
        "documentation": {}
    },
    {
        "label": "temp_out",
        "kind": 5,
        "importPath": "testcode.img2md",
        "description": "testcode.img2md",
        "peekOfCode": "temp_out = list()\nlast_line = {\"text\":out[0][\"text\"],\"score\":out[0][\"score\"],\"position\":out[0][\"position\"].tolist()}\nend_in_head_threshold = 30 * config.ZoomLevel\nhead_addr = None\nindex = 0\nfor i in out:\n    temp_line = {\"text\":i[\"text\"],\"score\":i[\"score\"],\"position\":i[\"position\"].tolist(),\"head\":True,\"end\":True}\n    if((abs(temp_line[\"position\"][0][1] - last_line[\"position\"][0][1]) <= end_in_head_threshold) and (index != 0)):\n        #last_line[\"text\"] = last_line[\"text\"] + temp_line[\"text\"]\n        if(head_addr != None):",
        "detail": "testcode.img2md",
        "documentation": {}
    },
    {
        "label": "last_line",
        "kind": 5,
        "importPath": "testcode.img2md",
        "description": "testcode.img2md",
        "peekOfCode": "last_line = {\"text\":out[0][\"text\"],\"score\":out[0][\"score\"],\"position\":out[0][\"position\"].tolist()}\nend_in_head_threshold = 30 * config.ZoomLevel\nhead_addr = None\nindex = 0\nfor i in out:\n    temp_line = {\"text\":i[\"text\"],\"score\":i[\"score\"],\"position\":i[\"position\"].tolist(),\"head\":True,\"end\":True}\n    if((abs(temp_line[\"position\"][0][1] - last_line[\"position\"][0][1]) <= end_in_head_threshold) and (index != 0)):\n        #last_line[\"text\"] = last_line[\"text\"] + temp_line[\"text\"]\n        if(head_addr != None):\n            temp_out[index - 1][\"end\"] = False",
        "detail": "testcode.img2md",
        "documentation": {}
    },
    {
        "label": "end_in_head_threshold",
        "kind": 5,
        "importPath": "testcode.img2md",
        "description": "testcode.img2md",
        "peekOfCode": "end_in_head_threshold = 30 * config.ZoomLevel\nhead_addr = None\nindex = 0\nfor i in out:\n    temp_line = {\"text\":i[\"text\"],\"score\":i[\"score\"],\"position\":i[\"position\"].tolist(),\"head\":True,\"end\":True}\n    if((abs(temp_line[\"position\"][0][1] - last_line[\"position\"][0][1]) <= end_in_head_threshold) and (index != 0)):\n        #last_line[\"text\"] = last_line[\"text\"] + temp_line[\"text\"]\n        if(head_addr != None):\n            temp_out[index - 1][\"end\"] = False\n            temp_line[\"head\"] = False",
        "detail": "testcode.img2md",
        "documentation": {}
    },
    {
        "label": "head_addr",
        "kind": 5,
        "importPath": "testcode.img2md",
        "description": "testcode.img2md",
        "peekOfCode": "head_addr = None\nindex = 0\nfor i in out:\n    temp_line = {\"text\":i[\"text\"],\"score\":i[\"score\"],\"position\":i[\"position\"].tolist(),\"head\":True,\"end\":True}\n    if((abs(temp_line[\"position\"][0][1] - last_line[\"position\"][0][1]) <= end_in_head_threshold) and (index != 0)):\n        #last_line[\"text\"] = last_line[\"text\"] + temp_line[\"text\"]\n        if(head_addr != None):\n            temp_out[index - 1][\"end\"] = False\n            temp_line[\"head\"] = False\n            pass",
        "detail": "testcode.img2md",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 5,
        "importPath": "testcode.img2md",
        "description": "testcode.img2md",
        "peekOfCode": "index = 0\nfor i in out:\n    temp_line = {\"text\":i[\"text\"],\"score\":i[\"score\"],\"position\":i[\"position\"].tolist(),\"head\":True,\"end\":True}\n    if((abs(temp_line[\"position\"][0][1] - last_line[\"position\"][0][1]) <= end_in_head_threshold) and (index != 0)):\n        #last_line[\"text\"] = last_line[\"text\"] + temp_line[\"text\"]\n        if(head_addr != None):\n            temp_out[index - 1][\"end\"] = False\n            temp_line[\"head\"] = False\n            pass\n        else:",
        "detail": "testcode.img2md",
        "documentation": {}
    },
    {
        "label": "line_cache",
        "kind": 5,
        "importPath": "testcode.img2md",
        "description": "testcode.img2md",
        "peekOfCode": "line_cache = temp_out[0]\nneo_out = list()\nfor i in temp_out:\n    if(i[\"head\"] == True):\n        if(i[\"end\"] == True):\n            #* Head True  End True\n            neo_out.append(i)\n        else:\n            #* Head True  End False\n            line_cache = i",
        "detail": "testcode.img2md",
        "documentation": {}
    },
    {
        "label": "neo_out",
        "kind": 5,
        "importPath": "testcode.img2md",
        "description": "testcode.img2md",
        "peekOfCode": "neo_out = list()\nfor i in temp_out:\n    if(i[\"head\"] == True):\n        if(i[\"end\"] == True):\n            #* Head True  End True\n            neo_out.append(i)\n        else:\n            #* Head True  End False\n            line_cache = i\n    else:",
        "detail": "testcode.img2md",
        "documentation": {}
    },
    {
        "label": "markdown_text",
        "kind": 5,
        "importPath": "testcode.img2md",
        "description": "testcode.img2md",
        "peekOfCode": "markdown_text = linesToMd(neo_out)\n#print(markdown_text)",
        "detail": "testcode.img2md",
        "documentation": {}
    },
    {
        "label": "text1",
        "kind": 5,
        "importPath": "testcode.merge",
        "description": "testcode.merge",
        "peekOfCode": "text1 = \"，弦叶已经逐渐的到了极限，在这一场体力的角\"\ntext2 = \"、弦叶已经逐渐的到]了极限，在这一场体力的角\"\ntext3 = \"牙，使用意念交流向看弦叶说到。\"\ntext4 = \"牙,使用意念交流向着弦叶说到_\"\ntext5 = \"面具上，那里应该有它的弱点！’\"\ntext6 = \"面具上,那里应该有它的弱点!\"\ntext7 = \"宇迦大人绝对不行！那样实在是太危险了\"\ntext8= \"宇迦大人绝对不行!尹那样实在是太危险了\"\nPunctuationMarks = {\",\",\".\",\"/\",\"\"}\nif(text1[0] in )",
        "detail": "testcode.merge",
        "documentation": {}
    },
    {
        "label": "text2",
        "kind": 5,
        "importPath": "testcode.merge",
        "description": "testcode.merge",
        "peekOfCode": "text2 = \"、弦叶已经逐渐的到]了极限，在这一场体力的角\"\ntext3 = \"牙，使用意念交流向看弦叶说到。\"\ntext4 = \"牙,使用意念交流向着弦叶说到_\"\ntext5 = \"面具上，那里应该有它的弱点！’\"\ntext6 = \"面具上,那里应该有它的弱点!\"\ntext7 = \"宇迦大人绝对不行！那样实在是太危险了\"\ntext8= \"宇迦大人绝对不行!尹那样实在是太危险了\"\nPunctuationMarks = {\",\",\".\",\"/\",\"\"}\nif(text1[0] in )",
        "detail": "testcode.merge",
        "documentation": {}
    },
    {
        "label": "text3",
        "kind": 5,
        "importPath": "testcode.merge",
        "description": "testcode.merge",
        "peekOfCode": "text3 = \"牙，使用意念交流向看弦叶说到。\"\ntext4 = \"牙,使用意念交流向着弦叶说到_\"\ntext5 = \"面具上，那里应该有它的弱点！’\"\ntext6 = \"面具上,那里应该有它的弱点!\"\ntext7 = \"宇迦大人绝对不行！那样实在是太危险了\"\ntext8= \"宇迦大人绝对不行!尹那样实在是太危险了\"\nPunctuationMarks = {\",\",\".\",\"/\",\"\"}\nif(text1[0] in )",
        "detail": "testcode.merge",
        "documentation": {}
    },
    {
        "label": "text4",
        "kind": 5,
        "importPath": "testcode.merge",
        "description": "testcode.merge",
        "peekOfCode": "text4 = \"牙,使用意念交流向着弦叶说到_\"\ntext5 = \"面具上，那里应该有它的弱点！’\"\ntext6 = \"面具上,那里应该有它的弱点!\"\ntext7 = \"宇迦大人绝对不行！那样实在是太危险了\"\ntext8= \"宇迦大人绝对不行!尹那样实在是太危险了\"\nPunctuationMarks = {\",\",\".\",\"/\",\"\"}\nif(text1[0] in )",
        "detail": "testcode.merge",
        "documentation": {}
    },
    {
        "label": "text5",
        "kind": 5,
        "importPath": "testcode.merge",
        "description": "testcode.merge",
        "peekOfCode": "text5 = \"面具上，那里应该有它的弱点！’\"\ntext6 = \"面具上,那里应该有它的弱点!\"\ntext7 = \"宇迦大人绝对不行！那样实在是太危险了\"\ntext8= \"宇迦大人绝对不行!尹那样实在是太危险了\"\nPunctuationMarks = {\",\",\".\",\"/\",\"\"}\nif(text1[0] in )",
        "detail": "testcode.merge",
        "documentation": {}
    },
    {
        "label": "text6",
        "kind": 5,
        "importPath": "testcode.merge",
        "description": "testcode.merge",
        "peekOfCode": "text6 = \"面具上,那里应该有它的弱点!\"\ntext7 = \"宇迦大人绝对不行！那样实在是太危险了\"\ntext8= \"宇迦大人绝对不行!尹那样实在是太危险了\"\nPunctuationMarks = {\",\",\".\",\"/\",\"\"}\nif(text1[0] in )",
        "detail": "testcode.merge",
        "documentation": {}
    },
    {
        "label": "text7",
        "kind": 5,
        "importPath": "testcode.merge",
        "description": "testcode.merge",
        "peekOfCode": "text7 = \"宇迦大人绝对不行！那样实在是太危险了\"\ntext8= \"宇迦大人绝对不行!尹那样实在是太危险了\"\nPunctuationMarks = {\",\",\".\",\"/\",\"\"}\nif(text1[0] in )",
        "detail": "testcode.merge",
        "documentation": {}
    },
    {
        "label": "PunctuationMarks",
        "kind": 5,
        "importPath": "testcode.merge",
        "description": "testcode.merge",
        "peekOfCode": "PunctuationMarks = {\",\",\".\",\"/\",\"\"}\nif(text1[0] in )",
        "detail": "testcode.merge",
        "documentation": {}
    },
    {
        "label": "ocr",
        "kind": 5,
        "importPath": "testcode.ocrb2",
        "description": "testcode.ocrb2",
        "peekOfCode": "ocr = PaddleOCR(use_angle_cls=True,\n                lang=\"ch\",\n                det_model_dir = \"D:/appdata/ch_PP-OCRv3_det_infer\",\n                rec_model_dir = \"D:/appdata/ch_PP-OCRv3_rec_infer\"\n                )  # need to run only once to download and load model into memory\nimg_path = \"./realesrgan-ncnn-vulkan-20220424-windows/output.png\"\nresult = ocr.ocr(img_path, cls=True)\nfor idx in range(len(result)):\n    res = result[idx]\n    for line in res:",
        "detail": "testcode.ocrb2",
        "documentation": {}
    },
    {
        "label": "img_path",
        "kind": 5,
        "importPath": "testcode.ocrb2",
        "description": "testcode.ocrb2",
        "peekOfCode": "img_path = \"./realesrgan-ncnn-vulkan-20220424-windows/output.png\"\nresult = ocr.ocr(img_path, cls=True)\nfor idx in range(len(result)):\n    res = result[idx]\n    for line in res:\n        #print(line)\n        print(line[1][0])\n# 显示结果\n# 如果本地没有simfang.ttf，可以在doc/fonts目录下下载\nfrom PIL import Image",
        "detail": "testcode.ocrb2",
        "documentation": {}
    },
    {
        "label": "result",
        "kind": 5,
        "importPath": "testcode.ocrb2",
        "description": "testcode.ocrb2",
        "peekOfCode": "result = ocr.ocr(img_path, cls=True)\nfor idx in range(len(result)):\n    res = result[idx]\n    for line in res:\n        #print(line)\n        print(line[1][0])\n# 显示结果\n# 如果本地没有simfang.ttf，可以在doc/fonts目录下下载\nfrom PIL import Image\nresult = result[0]",
        "detail": "testcode.ocrb2",
        "documentation": {}
    },
    {
        "label": "result",
        "kind": 5,
        "importPath": "testcode.ocrb2",
        "description": "testcode.ocrb2",
        "peekOfCode": "result = result[0]\nimage = Image.open(img_path).convert('RGB')\nboxes = [line[0] for line in result]\ntxts = [line[1][0] for line in result]\nscores = [line[1][1] for line in result]\nim_show = draw_ocr(image, boxes, txts, scores, font_path='doc/fonts/simfang.ttf')\nim_show = Image.fromarray(im_show)\nim_show.save('result.jpg')",
        "detail": "testcode.ocrb2",
        "documentation": {}
    },
    {
        "label": "image",
        "kind": 5,
        "importPath": "testcode.ocrb2",
        "description": "testcode.ocrb2",
        "peekOfCode": "image = Image.open(img_path).convert('RGB')\nboxes = [line[0] for line in result]\ntxts = [line[1][0] for line in result]\nscores = [line[1][1] for line in result]\nim_show = draw_ocr(image, boxes, txts, scores, font_path='doc/fonts/simfang.ttf')\nim_show = Image.fromarray(im_show)\nim_show.save('result.jpg')",
        "detail": "testcode.ocrb2",
        "documentation": {}
    },
    {
        "label": "boxes",
        "kind": 5,
        "importPath": "testcode.ocrb2",
        "description": "testcode.ocrb2",
        "peekOfCode": "boxes = [line[0] for line in result]\ntxts = [line[1][0] for line in result]\nscores = [line[1][1] for line in result]\nim_show = draw_ocr(image, boxes, txts, scores, font_path='doc/fonts/simfang.ttf')\nim_show = Image.fromarray(im_show)\nim_show.save('result.jpg')",
        "detail": "testcode.ocrb2",
        "documentation": {}
    },
    {
        "label": "txts",
        "kind": 5,
        "importPath": "testcode.ocrb2",
        "description": "testcode.ocrb2",
        "peekOfCode": "txts = [line[1][0] for line in result]\nscores = [line[1][1] for line in result]\nim_show = draw_ocr(image, boxes, txts, scores, font_path='doc/fonts/simfang.ttf')\nim_show = Image.fromarray(im_show)\nim_show.save('result.jpg')",
        "detail": "testcode.ocrb2",
        "documentation": {}
    },
    {
        "label": "scores",
        "kind": 5,
        "importPath": "testcode.ocrb2",
        "description": "testcode.ocrb2",
        "peekOfCode": "scores = [line[1][1] for line in result]\nim_show = draw_ocr(image, boxes, txts, scores, font_path='doc/fonts/simfang.ttf')\nim_show = Image.fromarray(im_show)\nim_show.save('result.jpg')",
        "detail": "testcode.ocrb2",
        "documentation": {}
    },
    {
        "label": "im_show",
        "kind": 5,
        "importPath": "testcode.ocrb2",
        "description": "testcode.ocrb2",
        "peekOfCode": "im_show = draw_ocr(image, boxes, txts, scores, font_path='doc/fonts/simfang.ttf')\nim_show = Image.fromarray(im_show)\nim_show.save('result.jpg')",
        "detail": "testcode.ocrb2",
        "documentation": {}
    },
    {
        "label": "im_show",
        "kind": 5,
        "importPath": "testcode.ocrb2",
        "description": "testcode.ocrb2",
        "peekOfCode": "im_show = Image.fromarray(im_show)\nim_show.save('result.jpg')",
        "detail": "testcode.ocrb2",
        "documentation": {}
    },
    {
        "label": "titleValidator",
        "kind": 2,
        "importPath": "testcode.ocrtest",
        "description": "testcode.ocrtest",
        "peekOfCode": "def titleValidator(line:dict)->bool:\n    threshold = 60*4\n    # 行高大于阈值即为标题\n    hight = line[\"position\"][3][1] - line[\"position\"][0][1]\n    if(hight >= threshold):\n        return True\n    else:\n        return False\ndef headerValidator(line:dict)->bool:\n    threshold = 100*4",
        "detail": "testcode.ocrtest",
        "documentation": {}
    },
    {
        "label": "headerValidator",
        "kind": 2,
        "importPath": "testcode.ocrtest",
        "description": "testcode.ocrtest",
        "peekOfCode": "def headerValidator(line:dict)->bool:\n    threshold = 100*4\n    # 缩进大于阈值即为段首\n    indentation = line[\"position\"][0][0]\n    if(indentation >= threshold):\n        return True\n    else:\n        return False\ndef linesToMd(lines:list)->str:\n    threshold = 10*4",
        "detail": "testcode.ocrtest",
        "documentation": {}
    },
    {
        "label": "linesToMd",
        "kind": 2,
        "importPath": "testcode.ocrtest",
        "description": "testcode.ocrtest",
        "peekOfCode": "def linesToMd(lines:list)->str:\n    threshold = 10*4\n    # y 坐标差大于阈值视为两行\n    pos_y_previous_sentence:float = lines[0][\"position\"][0][1]\n    text:str = \"\"\n    for i in lines:\n        pos_y_now_sentence = i[\"position\"][0][1]\n        if(titleValidator(i)):\n            text += f\"\\n### {i['text']}\\n\"\n        elif(headerValidator(i)):",
        "detail": "testcode.ocrtest",
        "documentation": {}
    },
    {
        "label": "img_fp",
        "kind": 5,
        "importPath": "testcode.ocrtest",
        "description": "testcode.ocrtest",
        "peekOfCode": "img_fp = 'C:/Users/qwe17/OneDrive/桌面/inari_178__waifu2x_4x_3n_png.png'\nocr = CnOcr(\n    rec_model_name = 'densenet_lite_136-gru',\n    det_model_name = 'db_resnet34',\n    context = 'cpu',  # ['cpu', 'gpu', 'cuda']\n    )\nout = ocr.ocr(img_fp)\nneo_out = list()\nfor i in out:\n    temp_line = {\"text\":i[\"text\"],\"score\":i[\"score\"],\"position\":i[\"position\"].tolist()}",
        "detail": "testcode.ocrtest",
        "documentation": {}
    },
    {
        "label": "ocr",
        "kind": 5,
        "importPath": "testcode.ocrtest",
        "description": "testcode.ocrtest",
        "peekOfCode": "ocr = CnOcr(\n    rec_model_name = 'densenet_lite_136-gru',\n    det_model_name = 'db_resnet34',\n    context = 'cpu',  # ['cpu', 'gpu', 'cuda']\n    )\nout = ocr.ocr(img_fp)\nneo_out = list()\nfor i in out:\n    temp_line = {\"text\":i[\"text\"],\"score\":i[\"score\"],\"position\":i[\"position\"].tolist()}\n    neo_out.append(temp_line)",
        "detail": "testcode.ocrtest",
        "documentation": {}
    },
    {
        "label": "out",
        "kind": 5,
        "importPath": "testcode.ocrtest",
        "description": "testcode.ocrtest",
        "peekOfCode": "out = ocr.ocr(img_fp)\nneo_out = list()\nfor i in out:\n    temp_line = {\"text\":i[\"text\"],\"score\":i[\"score\"],\"position\":i[\"position\"].tolist()}\n    neo_out.append(temp_line)\nmarkdown_text = linesToMd(neo_out)\nprint(markdown_text)",
        "detail": "testcode.ocrtest",
        "documentation": {}
    },
    {
        "label": "neo_out",
        "kind": 5,
        "importPath": "testcode.ocrtest",
        "description": "testcode.ocrtest",
        "peekOfCode": "neo_out = list()\nfor i in out:\n    temp_line = {\"text\":i[\"text\"],\"score\":i[\"score\"],\"position\":i[\"position\"].tolist()}\n    neo_out.append(temp_line)\nmarkdown_text = linesToMd(neo_out)\nprint(markdown_text)",
        "detail": "testcode.ocrtest",
        "documentation": {}
    },
    {
        "label": "markdown_text",
        "kind": 5,
        "importPath": "testcode.ocrtest",
        "description": "testcode.ocrtest",
        "peekOfCode": "markdown_text = linesToMd(neo_out)\nprint(markdown_text)",
        "detail": "testcode.ocrtest",
        "documentation": {}
    },
    {
        "label": "img",
        "kind": 5,
        "importPath": "testcode.picCut",
        "description": "testcode.picCut",
        "peekOfCode": "img = cv2.imread(\"./Test/1684742444485.jpg\")\nprint(img.shape)\ncropped = img[170:2360, 50:1000]  # 裁剪坐标为[y0:y1, x0:x1]\ncv2.imwrite(\"./cut/cv_cut_thor.jpg\", cropped)",
        "detail": "testcode.picCut",
        "documentation": {}
    },
    {
        "label": "cropped",
        "kind": 5,
        "importPath": "testcode.picCut",
        "description": "testcode.picCut",
        "peekOfCode": "cropped = img[170:2360, 50:1000]  # 裁剪坐标为[y0:y1, x0:x1]\ncv2.imwrite(\"./cut/cv_cut_thor.jpg\", cropped)",
        "detail": "testcode.picCut",
        "documentation": {}
    },
    {
        "label": "get_one_cap",
        "kind": 2,
        "importPath": "testcode.usb2md",
        "description": "testcode.usb2md",
        "peekOfCode": "def get_one_cap(cap_road):\n    os.system('adb shell screencap -p > ' + cap_road)\n    with open(cap_road, 'rb') as f:\n        data = f.read()\n    return data.replace(b'\\r\\n', b'\\n')\ndef getCap()->None:\n    cap = get_one_cap('R:/Temp/cap.png')\n    with open('R:/Temp/cap.png', 'wb') as f:\n        f.write(cap)\ndef cutImg()->None:",
        "detail": "testcode.usb2md",
        "documentation": {}
    },
    {
        "label": "getCap",
        "kind": 2,
        "importPath": "testcode.usb2md",
        "description": "testcode.usb2md",
        "peekOfCode": "def getCap()->None:\n    cap = get_one_cap('R:/Temp/cap.png')\n    with open('R:/Temp/cap.png', 'wb') as f:\n        f.write(cap)\ndef cutImg()->None:\n    img = cv2.imread(\"R:/Temp/cap.png\")\n    #print(img.shape)\n    cropped = img[170:2360, 50:1000]  # 裁剪坐标为[y0:y1, x0:x1]\n    cv2.imwrite(\"R:/Temp/cv_cut_thor.jpg\", cropped)\ndef nextScreen()->None:",
        "detail": "testcode.usb2md",
        "documentation": {}
    },
    {
        "label": "cutImg",
        "kind": 2,
        "importPath": "testcode.usb2md",
        "description": "testcode.usb2md",
        "peekOfCode": "def cutImg()->None:\n    img = cv2.imread(\"R:/Temp/cap.png\")\n    #print(img.shape)\n    cropped = img[170:2360, 50:1000]  # 裁剪坐标为[y0:y1, x0:x1]\n    cv2.imwrite(\"R:/Temp/cv_cut_thor.jpg\", cropped)\ndef nextScreen()->None:\n    os.system('adb shell input swipe 540 1300 540 500 100')\ndef titleValidator(line:dict)->bool:\n    threshold = 70\n    # 行高大于阈值即为标题",
        "detail": "testcode.usb2md",
        "documentation": {}
    },
    {
        "label": "nextScreen",
        "kind": 2,
        "importPath": "testcode.usb2md",
        "description": "testcode.usb2md",
        "peekOfCode": "def nextScreen()->None:\n    os.system('adb shell input swipe 540 1300 540 500 100')\ndef titleValidator(line:dict)->bool:\n    threshold = 70\n    # 行高大于阈值即为标题\n    hight = line[\"position\"][3][1] - line[\"position\"][0][1]\n    if(hight >= threshold):\n        return True\n    else:\n        return False",
        "detail": "testcode.usb2md",
        "documentation": {}
    },
    {
        "label": "titleValidator",
        "kind": 2,
        "importPath": "testcode.usb2md",
        "description": "testcode.usb2md",
        "peekOfCode": "def titleValidator(line:dict)->bool:\n    threshold = 70\n    # 行高大于阈值即为标题\n    hight = line[\"position\"][3][1] - line[\"position\"][0][1]\n    if(hight >= threshold):\n        return True\n    else:\n        return False\ndef headerValidator(line:dict)->bool:\n    threshold = 100",
        "detail": "testcode.usb2md",
        "documentation": {}
    },
    {
        "label": "headerValidator",
        "kind": 2,
        "importPath": "testcode.usb2md",
        "description": "testcode.usb2md",
        "peekOfCode": "def headerValidator(line:dict)->bool:\n    threshold = 100\n    # 缩进大于阈值即为段首\n    indentation = line[\"position\"][0][0]\n    if(indentation >= threshold):\n        return True\n    else:\n        return False\ndef linesToMd(lines:list)->str:\n    threshold = 10",
        "detail": "testcode.usb2md",
        "documentation": {}
    },
    {
        "label": "linesToMd",
        "kind": 2,
        "importPath": "testcode.usb2md",
        "description": "testcode.usb2md",
        "peekOfCode": "def linesToMd(lines:list)->str:\n    threshold = 10\n    # y 坐标差大于阈值视为两行\n    end_in_head_threshold = 30\n    # 如果段首存在标点符号，且是此页第一行 则插入空格隔断\n    pos_y_previous_sentence:float = lines[0][\"position\"][0][1]\n    text:str = \"\"\n    last_title = False\n    for i in lines:\n        pos_y_now_sentence = i[\"position\"][0][1]",
        "detail": "testcode.usb2md",
        "documentation": {}
    },
    {
        "label": "img2MD",
        "kind": 2,
        "importPath": "testcode.usb2md",
        "description": "testcode.usb2md",
        "peekOfCode": "def img2MD(ocr_obj)->str:\n    img_fp = 'R:/Temp/cv_cut_thor.jpg'\n    out = ocr_obj.ocr(img_fp)\n    neo_out = list()\n    for i in out:\n        temp_line = {\"text\":i[\"text\"],\"score\":i[\"score\"],\"position\":i[\"position\"].tolist()}\n        neo_out.append(temp_line)\n    markdown_text = linesToMd(neo_out)\n    print(markdown_text)\n    return markdown_text",
        "detail": "testcode.usb2md",
        "documentation": {}
    },
    {
        "label": "ocr",
        "kind": 5,
        "importPath": "testcode.usb2md",
        "description": "testcode.usb2md",
        "peekOfCode": "ocr = CnOcr(\n    rec_model_name = 'densenet_lite_136-gru',\n    det_model_name = 'db_resnet34',\n    context = 'cpu',  # ['cpu', 'gpu', 'cuda']\n)\nfile_path = 'out.md'\nfile_obj = open(file_path, mode='a', encoding='utf-8')\nwhile True:\n    getCap()\n    cutImg()",
        "detail": "testcode.usb2md",
        "documentation": {}
    },
    {
        "label": "file_path",
        "kind": 5,
        "importPath": "testcode.usb2md",
        "description": "testcode.usb2md",
        "peekOfCode": "file_path = 'out.md'\nfile_obj = open(file_path, mode='a', encoding='utf-8')\nwhile True:\n    getCap()\n    cutImg()\n    md = img2MD(ocr)\n    file_obj.write(md)\n    nextScreen()\n    time.sleep(1)",
        "detail": "testcode.usb2md",
        "documentation": {}
    },
    {
        "label": "file_obj",
        "kind": 5,
        "importPath": "testcode.usb2md",
        "description": "testcode.usb2md",
        "peekOfCode": "file_obj = open(file_path, mode='a', encoding='utf-8')\nwhile True:\n    getCap()\n    cutImg()\n    md = img2MD(ocr)\n    file_obj.write(md)\n    nextScreen()\n    time.sleep(1)",
        "detail": "testcode.usb2md",
        "documentation": {}
    },
    {
        "label": "getOutputImgPath",
        "kind": 2,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "def getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"\n    return f\"{OutputPath}/{OutputImgPath}/{OutputImgName}\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "WindowTitle",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "WindowTitle = \"AndreaNeoNovelDownloader\"\nWindowIcon = \"app/resource/images/logo.png\"\n# ! 裁切设置\n# * 裁剪坐标为[y0:y1, x0:x1]\n#ImgCutPos = [170,2360,50,1000] # 裁剪坐标为[y0:y1, x0:x1]\n# ? Redmi Note12T Pro [170,2360,50,1000]\n# ? Redmi Note7 Pro   [145,2200,50,1000]\nImgCutPos = [170,2360,50,1000]\n# ! 识别设置\n    # * 识别增强",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "WindowIcon",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "WindowIcon = \"app/resource/images/logo.png\"\n# ! 裁切设置\n# * 裁剪坐标为[y0:y1, x0:x1]\n#ImgCutPos = [170,2360,50,1000] # 裁剪坐标为[y0:y1, x0:x1]\n# ? Redmi Note12T Pro [170,2360,50,1000]\n# ? Redmi Note7 Pro   [145,2200,50,1000]\nImgCutPos = [170,2360,50,1000]\n# ! 识别设置\n    # * 识别增强\nZoomLevel = 4",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "#ImgCutPos",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "#ImgCutPos = [170,2360,50,1000] # 裁剪坐标为[y0:y1, x0:x1]\n# ? Redmi Note12T Pro [170,2360,50,1000]\n# ? Redmi Note7 Pro   [145,2200,50,1000]\nImgCutPos = [170,2360,50,1000]\n# ! 识别设置\n    # * 识别增强\nZoomLevel = 4\nZoomStage = True if(ZoomLevel != 0) else False\n    # * 标题识别\nTitleThresholdHigh = 70",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "ImgCutPos",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "ImgCutPos = [170,2360,50,1000]\n# ! 识别设置\n    # * 识别增强\nZoomLevel = 4\nZoomStage = True if(ZoomLevel != 0) else False\n    # * 标题识别\nTitleThresholdHigh = 70\nEnable_TitleHigh = False\nTitleRegularExpression = \"^第.*章.*\"\nEnable_TitleRegularExpression = True",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "ZoomLevel",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "ZoomLevel = 4\nZoomStage = True if(ZoomLevel != 0) else False\n    # * 标题识别\nTitleThresholdHigh = 70\nEnable_TitleHigh = False\nTitleRegularExpression = \"^第.*章.*\"\nEnable_TitleRegularExpression = True\n    # * 段首识别\nHeaderThresholdIndentation = 100\nEnable_HeaderIndentation = True",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "ZoomStage",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "ZoomStage = True if(ZoomLevel != 0) else False\n    # * 标题识别\nTitleThresholdHigh = 70\nEnable_TitleHigh = False\nTitleRegularExpression = \"^第.*章.*\"\nEnable_TitleRegularExpression = True\n    # * 段首识别\nHeaderThresholdIndentation = 100\nEnable_HeaderIndentation = True\n    # * 换行识别",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "TitleThresholdHigh",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "TitleThresholdHigh = 70\nEnable_TitleHigh = False\nTitleRegularExpression = \"^第.*章.*\"\nEnable_TitleRegularExpression = True\n    # * 段首识别\nHeaderThresholdIndentation = 100\nEnable_HeaderIndentation = True\n    # * 换行识别\nLinefeedThresholdDeltaHigh = 10\nEnable_LinefeedThresholdDeltaHigh = True",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "Enable_TitleHigh",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "Enable_TitleHigh = False\nTitleRegularExpression = \"^第.*章.*\"\nEnable_TitleRegularExpression = True\n    # * 段首识别\nHeaderThresholdIndentation = 100\nEnable_HeaderIndentation = True\n    # * 换行识别\nLinefeedThresholdDeltaHigh = 10\nEnable_LinefeedThresholdDeltaHigh = True\n    # * 截图翻页等待时间",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "TitleRegularExpression",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "TitleRegularExpression = \"^第.*章.*\"\nEnable_TitleRegularExpression = True\n    # * 段首识别\nHeaderThresholdIndentation = 100\nEnable_HeaderIndentation = True\n    # * 换行识别\nLinefeedThresholdDeltaHigh = 10\nEnable_LinefeedThresholdDeltaHigh = True\n    # * 截图翻页等待时间\nNextPageWaitTime = 0.5",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "Enable_TitleRegularExpression",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "Enable_TitleRegularExpression = True\n    # * 段首识别\nHeaderThresholdIndentation = 100\nEnable_HeaderIndentation = True\n    # * 换行识别\nLinefeedThresholdDeltaHigh = 10\nEnable_LinefeedThresholdDeltaHigh = True\n    # * 截图翻页等待时间\nNextPageWaitTime = 0.5\n    # * 索引设置",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "HeaderThresholdIndentation",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "HeaderThresholdIndentation = 100\nEnable_HeaderIndentation = True\n    # * 换行识别\nLinefeedThresholdDeltaHigh = 10\nEnable_LinefeedThresholdDeltaHigh = True\n    # * 截图翻页等待时间\nNextPageWaitTime = 0.5\n    # * 索引设置\nMaximumPage = 2147483647\n# ! OCR设置",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "Enable_HeaderIndentation",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "Enable_HeaderIndentation = True\n    # * 换行识别\nLinefeedThresholdDeltaHigh = 10\nEnable_LinefeedThresholdDeltaHigh = True\n    # * 截图翻页等待时间\nNextPageWaitTime = 0.5\n    # * 索引设置\nMaximumPage = 2147483647\n# ! OCR设置\nRecModel = \"densenet_lite_136-gru\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "LinefeedThresholdDeltaHigh",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "LinefeedThresholdDeltaHigh = 10\nEnable_LinefeedThresholdDeltaHigh = True\n    # * 截图翻页等待时间\nNextPageWaitTime = 0.5\n    # * 索引设置\nMaximumPage = 2147483647\n# ! OCR设置\nRecModel = \"densenet_lite_136-gru\"\nDetModel = \"db_resnet34\"\nOcrProcessorsType = \"cpu\"  # ['cpu', 'gpu', 'cuda']",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "Enable_LinefeedThresholdDeltaHigh",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "Enable_LinefeedThresholdDeltaHigh = True\n    # * 截图翻页等待时间\nNextPageWaitTime = 0.5\n    # * 索引设置\nMaximumPage = 2147483647\n# ! OCR设置\nRecModel = \"densenet_lite_136-gru\"\nDetModel = \"db_resnet34\"\nOcrProcessorsType = \"cpu\"  # ['cpu', 'gpu', 'cuda']\n# ! 文件路径",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "NextPageWaitTime",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "NextPageWaitTime = 0.5\n    # * 索引设置\nMaximumPage = 2147483647\n# ! OCR设置\nRecModel = \"densenet_lite_136-gru\"\nDetModel = \"db_resnet34\"\nOcrProcessorsType = \"cpu\"  # ['cpu', 'gpu', 'cuda']\n# ! 文件路径\n    # * 临时文件路径\nTempPath = \"R:/Temp\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "MaximumPage",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "MaximumPage = 2147483647\n# ! OCR设置\nRecModel = \"densenet_lite_136-gru\"\nDetModel = \"db_resnet34\"\nOcrProcessorsType = \"cpu\"  # ['cpu', 'gpu', 'cuda']\n# ! 文件路径\n    # * 临时文件路径\nTempPath = \"R:/Temp\"\nCapImg = \"cap.png\"\nCroppedImg = \"cv_cut_thor.png\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "RecModel",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "RecModel = \"densenet_lite_136-gru\"\nDetModel = \"db_resnet34\"\nOcrProcessorsType = \"cpu\"  # ['cpu', 'gpu', 'cuda']\n# ! 文件路径\n    # * 临时文件路径\nTempPath = \"R:/Temp\"\nCapImg = \"cap.png\"\nCroppedImg = \"cv_cut_thor.png\"\nCapImgPath = f\"{TempPath}/{CapImg}\"\nCroppedImgPath = f\"{TempPath}/{CroppedImg}\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "DetModel",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "DetModel = \"db_resnet34\"\nOcrProcessorsType = \"cpu\"  # ['cpu', 'gpu', 'cuda']\n# ! 文件路径\n    # * 临时文件路径\nTempPath = \"R:/Temp\"\nCapImg = \"cap.png\"\nCroppedImg = \"cv_cut_thor.png\"\nCapImgPath = f\"{TempPath}/{CapImg}\"\nCroppedImgPath = f\"{TempPath}/{CroppedImg}\"\n    # * 输出文件路径",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "OcrProcessorsType",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "OcrProcessorsType = \"cpu\"  # ['cpu', 'gpu', 'cuda']\n# ! 文件路径\n    # * 临时文件路径\nTempPath = \"R:/Temp\"\nCapImg = \"cap.png\"\nCroppedImg = \"cv_cut_thor.png\"\nCapImgPath = f\"{TempPath}/{CapImg}\"\nCroppedImgPath = f\"{TempPath}/{CroppedImg}\"\n    # * 输出文件路径\nOutputPath = \"D:/临时文件/noveldownload\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "TempPath",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "TempPath = \"R:/Temp\"\nCapImg = \"cap.png\"\nCroppedImg = \"cv_cut_thor.png\"\nCapImgPath = f\"{TempPath}/{CapImg}\"\nCroppedImgPath = f\"{TempPath}/{CroppedImg}\"\n    # * 输出文件路径\nOutputPath = \"D:/临时文件/noveldownload\"\nOutputImgPath = \"img\"\nOutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "CapImg",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "CapImg = \"cap.png\"\nCroppedImg = \"cv_cut_thor.png\"\nCapImgPath = f\"{TempPath}/{CapImg}\"\nCroppedImgPath = f\"{TempPath}/{CroppedImg}\"\n    # * 输出文件路径\nOutputPath = \"D:/临时文件/noveldownload\"\nOutputImgPath = \"img\"\nOutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "CroppedImg",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "CroppedImg = \"cv_cut_thor.png\"\nCapImgPath = f\"{TempPath}/{CapImg}\"\nCroppedImgPath = f\"{TempPath}/{CroppedImg}\"\n    # * 输出文件路径\nOutputPath = \"D:/临时文件/noveldownload\"\nOutputImgPath = \"img\"\nOutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "CapImgPath",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "CapImgPath = f\"{TempPath}/{CapImg}\"\nCroppedImgPath = f\"{TempPath}/{CroppedImg}\"\n    # * 输出文件路径\nOutputPath = \"D:/临时文件/noveldownload\"\nOutputImgPath = \"img\"\nOutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "CroppedImgPath",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "CroppedImgPath = f\"{TempPath}/{CroppedImg}\"\n    # * 输出文件路径\nOutputPath = \"D:/临时文件/noveldownload\"\nOutputImgPath = \"img\"\nOutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"\n    return f\"{OutputPath}/{OutputImgPath}/{OutputImgName}\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "OutputPath",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "OutputPath = \"D:/临时文件/noveldownload\"\nOutputImgPath = \"img\"\nOutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"\n    return f\"{OutputPath}/{OutputImgPath}/{OutputImgName}\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "OutputImgPath",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "OutputImgPath = \"img\"\nOutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"\n    return f\"{OutputPath}/{OutputImgPath}/{OutputImgName}\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "OutputImgFullDir",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "OutputImgFullDir = f\"{OutputPath}/{OutputImgPath}\"\nMarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"\n    return f\"{OutputPath}/{OutputImgPath}/{OutputImgName}\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "MarkdownName",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "MarkdownName = \"out.md\"\nMarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"\n    return f\"{OutputPath}/{OutputImgPath}/{OutputImgName}\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "MarkdownPath",
        "kind": 5,
        "importPath": "config",
        "description": "config",
        "peekOfCode": "MarkdownPath = f\"{OutputPath}/{MarkdownName}\"\ndef getOutputImgPath(index:int,prefix:str):\n    OutputImgName = f\"{prefix}_{index}_.png\"\n    return f\"{OutputPath}/{OutputImgPath}/{OutputImgName}\"",
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "CommandWidget",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class CommandWidget(QFrame):\n    def __init__(self, text: str ,parent=None, context = None):\n        super().__init__(parent=parent)\n        self.parent = parent\n        self.context = context\n        self.context.ocr_thread.tootipTitleUpdate.connect(self.Tooltip_titleUpdate)\n        self.context.ocr_thread.tooltipContentUpdate.connect(self.Tooltip_contentUpdate)\n        self.context.ocr_thread.indexdisplayValUpdate.connect(self.ImgIndex_valUpdate)\n        self.context.ocr_thread.taskdone.connect(self.OcrThread_taskDone)\n        self.layout = QHBoxLayout()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "Widget",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class Widget(QFrame):\n    def __init__(self, text: str, parent=None):\n        super().__init__(parent=parent)\n        self.label = QLabel(text, self)\n        self.label.setAlignment(Qt.AlignCenter)\n        self.hBoxLayout = QHBoxLayout(self)\n        self.hBoxLayout.addWidget(self.label, 1, Qt.AlignCenter)\n        self.setObjectName(text.replace(' ', '-'))\nclass PicWidget(QFrame):\n    def __init__(self, parent=None):",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "PicWidget",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class PicWidget(QFrame):\n    def __init__(self, parent=None):\n        super().__init__(parent=parent)\n        self.label = QLabel(self)\n        #self.label.setText(\"O\")\n        self.label.setScaledContents(True)\n        self.label.setAlignment(Qt.AlignCenter)\n        self.hBoxLayout = QHBoxLayout(self)\n        self.hBoxLayout.addWidget(self.label, 1, Qt.AlignCenter)\n        self.hBoxLayout.setContentsMargins(0,0,0,0)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "HomeInterface",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class HomeInterface(SimpleInterface):\n    \"\"\" Text interface \"\"\"\n    def __init__(self, parent=None ,context=None):\n        #t = Translator()\n        super().__init__(\n            title=\"Home Page\",\n            subtitle=\"自代码丢失后几年说是要重构 咕咕咕了几年总算是勉勉强强跑起来了（\",\n            parent=parent\n        )\n        # text edit",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "Window",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class Window(FramelessWindow):\n    def __init__(self):\n        super().__init__()\n        self.initOCR()\n        self.setTitleBar(StandardTitleBar(self))\n        # use dark theme mode\n        # setTheme(Theme.DARK)\n        # change the theme color\n        # setThemeColor('#0078d4')\n        self.hBoxLayout = QHBoxLayout(self)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "OcrThread",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class OcrThread(QThread):\n    picUpdate = pyqtSignal()\n    mdUpdate = pyqtSignal(str)\n    tootipTitleUpdate = pyqtSignal(str)\n    tooltipContentUpdate = pyqtSignal(str)\n    indexdisplayValUpdate = pyqtSignal(int)\n    taskdone = pyqtSignal()\n    def __init__(self) -> None:\n        super(OcrThread,self).__init__()\n        self.enable_ocr = False",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "SettingInterface",
        "kind": 6,
        "importPath": "SettingInterface",
        "description": "SettingInterface",
        "peekOfCode": "class SettingInterface(ScrollArea):\n    \"\"\" Setting interface \"\"\"\n    checkUpdateSig = pyqtSignal()\n    musicFoldersChanged = pyqtSignal(list)\n    acrylicEnableChanged = pyqtSignal(bool)\n    downloadFolderChanged = pyqtSignal(str)\n    minimizeToTrayChanged = pyqtSignal(bool)\n    def __init__(self, parent=None):\n        super().__init__(parent=parent)\n        self.scrollWidget = QWidget()",
        "detail": "SettingInterface",
        "documentation": {}
    },
    {
        "label": "get_one_cap",
        "kind": 2,
        "importPath": "usb2md_copy",
        "description": "usb2md_copy",
        "peekOfCode": "def get_one_cap(cap_road):\n    os.system('adb shell screencap -p > ' + cap_road)\n    with open(cap_road, 'rb') as f:\n        data = f.read()\n    return data.replace(b'\\r\\n', b'\\n')\ndef getCap()->None:\n    cap = get_one_cap(config.CapImgPath)\n    with open(config.CapImgPath, 'wb') as f:\n        f.write(cap)\ndef cutImg()->None:",
        "detail": "usb2md_copy",
        "documentation": {}
    },
    {
        "label": "getCap",
        "kind": 2,
        "importPath": "usb2md_copy",
        "description": "usb2md_copy",
        "peekOfCode": "def getCap()->None:\n    cap = get_one_cap(config.CapImgPath)\n    with open(config.CapImgPath, 'wb') as f:\n        f.write(cap)\ndef cutImg()->None:\n    img = cv2.imread(config.CapImgPath)\n    #print(img.shape)\n    cropped = img[config.ImgCutPos[0]:config.ImgCutPos[1], config.ImgCutPos[2]:config.ImgCutPos[3]]  # 裁剪坐标为[y0:y1, x0:x1]\n    cv2.imwrite(config.CroppedImgPath, cropped)\ndef nextScreen()->None:",
        "detail": "usb2md_copy",
        "documentation": {}
    },
    {
        "label": "cutImg",
        "kind": 2,
        "importPath": "usb2md_copy",
        "description": "usb2md_copy",
        "peekOfCode": "def cutImg()->None:\n    img = cv2.imread(config.CapImgPath)\n    #print(img.shape)\n    cropped = img[config.ImgCutPos[0]:config.ImgCutPos[1], config.ImgCutPos[2]:config.ImgCutPos[3]]  # 裁剪坐标为[y0:y1, x0:x1]\n    cv2.imwrite(config.CroppedImgPath, cropped)\ndef nextScreen()->None:\n    os.system('adb shell input swipe 540 1300 540 500 100')\ndef titleValidator(line:dict)->bool:\n    threshold = config.TitleThresholdHigh\n    # 行高大于阈值即为标题",
        "detail": "usb2md_copy",
        "documentation": {}
    },
    {
        "label": "nextScreen",
        "kind": 2,
        "importPath": "usb2md_copy",
        "description": "usb2md_copy",
        "peekOfCode": "def nextScreen()->None:\n    os.system('adb shell input swipe 540 1300 540 500 100')\ndef titleValidator(line:dict)->bool:\n    threshold = config.TitleThresholdHigh\n    # 行高大于阈值即为标题\n    pattern = config.TitleRegularExpression\n    # 使用正则表达式匹配\n    hight = line[\"position\"][3][1] - line[\"position\"][0][1]\n    if(hight >= threshold and config.Enable_TitleHigh):\n        return True",
        "detail": "usb2md_copy",
        "documentation": {}
    },
    {
        "label": "titleValidator",
        "kind": 2,
        "importPath": "usb2md_copy",
        "description": "usb2md_copy",
        "peekOfCode": "def titleValidator(line:dict)->bool:\n    threshold = config.TitleThresholdHigh\n    # 行高大于阈值即为标题\n    pattern = config.TitleRegularExpression\n    # 使用正则表达式匹配\n    hight = line[\"position\"][3][1] - line[\"position\"][0][1]\n    if(hight >= threshold and config.Enable_TitleHigh):\n        return True\n    elif(re.match(pattern, line[\"text\"], flags=0) != None and config.Enable_TitleRegularExpression):\n        return True",
        "detail": "usb2md_copy",
        "documentation": {}
    },
    {
        "label": "headerValidator",
        "kind": 2,
        "importPath": "usb2md_copy",
        "description": "usb2md_copy",
        "peekOfCode": "def headerValidator(line:dict)->bool:\n    threshold = config.HeaderThresholdIndentation\n    # 缩进大于阈值即为段首\n    indentation = line[\"position\"][0][0]\n    if(indentation >= threshold and config.Enable_HeaderIndentation):\n        return True\n    else:\n        return False\ndef linesToMd(lines:list)->str:\n    threshold = config.LinefeedThresholdDeltaHigh",
        "detail": "usb2md_copy",
        "documentation": {}
    },
    {
        "label": "linesToMd",
        "kind": 2,
        "importPath": "usb2md_copy",
        "description": "usb2md_copy",
        "peekOfCode": "def linesToMd(lines:list)->str:\n    threshold = config.LinefeedThresholdDeltaHigh\n    # y 坐标差大于阈值视为两行\n    end_in_head_threshold = 30\n    # 如果段首存在标点符号，且是此页第一行 则插入空格隔断\n    pos_y_previous_sentence:float = lines[0][\"position\"][0][1]\n    text:str = \"\"\n    last_title = False\n    for i in lines:\n        pos_y_now_sentence = i[\"position\"][0][1]",
        "detail": "usb2md_copy",
        "documentation": {}
    },
    {
        "label": "img2MD",
        "kind": 2,
        "importPath": "usb2md_copy",
        "description": "usb2md_copy",
        "peekOfCode": "def img2MD(ocr_obj)->str:\n    img_fp = config.CroppedImgPath\n    out = ocr_obj.ocr(img_fp)\n    temp_out = list()\n    last_line = {\"text\":out[0][\"text\"],\"score\":out[0][\"score\"],\"position\":out[0][\"position\"].tolist()}\n    end_in_head_threshold = 30 * config.ZoomLevel\n    head_addr = None\n    index = 0\n    for i in out:\n        temp_line = {\"text\":i[\"text\"],\"score\":i[\"score\"],\"position\":i[\"position\"].tolist(),\"head\":True,\"end\":True}",
        "detail": "usb2md_copy",
        "documentation": {}
    },
    {
        "label": "imgOutput",
        "kind": 2,
        "importPath": "usb2md_copy",
        "description": "usb2md_copy",
        "peekOfCode": "def imgOutput(outpath:str)->None:\n    if os.path.exists(config.OutputImgFullDir):\n        pass\n    else:\n        os.mkdir(config.OutputImgFullDir)\n    shutil.copy(config.CroppedImgPath, outpath)\nfile_path = config.MarkdownPath\nif(__name__ == \"__main__\"):\n    file_obj = open(file_path, mode='a', encoding='utf-8')\n    while True:",
        "detail": "usb2md_copy",
        "documentation": {}
    },
    {
        "label": "ocr",
        "kind": 5,
        "importPath": "usb2md_copy",
        "description": "usb2md_copy",
        "peekOfCode": "ocr = CnOcr(\n    rec_model_name = config.RecModel,\n    det_model_name = config.DetModel,\n    context = config.OcrProcessorsType\n)\ndef imgOutput(outpath:str)->None:\n    if os.path.exists(config.OutputImgFullDir):\n        pass\n    else:\n        os.mkdir(config.OutputImgFullDir)",
        "detail": "usb2md_copy",
        "documentation": {}
    },
    {
        "label": "file_path",
        "kind": 5,
        "importPath": "usb2md_copy",
        "description": "usb2md_copy",
        "peekOfCode": "file_path = config.MarkdownPath\nif(__name__ == \"__main__\"):\n    file_obj = open(file_path, mode='a', encoding='utf-8')\n    while True:\n        getCap()\n        cutImg()\n        md = img2MD(ocr)\n        print(md)\n        file_obj.write(md)\n        nextScreen()",
        "detail": "usb2md_copy",
        "documentation": {}
    }
]